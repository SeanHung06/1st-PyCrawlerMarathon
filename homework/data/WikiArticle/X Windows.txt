[<p><b>X Window系統</b>（<b>X Window System</b>，也常稱為<b>X11</b>或<b>X</b>）是一種以<a href="/wiki/%E4%BD%8D%E5%9B%BE" title="點陣圖">點陣圖</a>方式顯示的軟體<a href="/wiki/%E8%A6%96%E7%AA%97%E7%B3%BB%E7%B5%B1" title="視窗系統">視窗系統</a>。最初是1984年<a href="/wiki/%E9%BA%BB%E7%9C%81%E7%90%86%E5%B7%A5%E5%AD%A6%E9%99%A2" title="麻省理工學院">麻省理工學院</a>的研究，之後變成<a href="/wiki/UNIX" title="UNIX">UNIX</a>、<a class="mw-redirect" href="/wiki/%E9%A1%9EUNIX" title="類UNIX">類UNIX</a>、以及<a href="/wiki/OpenVMS" title="OpenVMS">OpenVMS</a>等<a href="/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" title="作業系統">作業系統</a>所一致適用的標準化軟體工具套件及顯示架構的運作協定。X Window系統透過軟體工具及架構協定來建立作業系統所用的<a href="/wiki/%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2" title="圖形化使用者介面">圖形化使用者介面</a>，此後則逐漸擴展適用到各形各色的其他作業系統上。現在幾乎所有的作業系統都能支援與使用X。更重要的是，今日知名的<a href="/wiki/%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83" title="桌面環境">桌面環境</a>——<a href="/wiki/GNOME" title="GNOME">GNOME</a>和<a href="/wiki/KDE" title="KDE">KDE</a>也都是以X Window系統為基礎建構成的。
</p>, <p>由於X只是工具套件及架構規範，本身並無實際參與運作的實體，所以必須有人依據此標準進行開發撰寫。如此才有真正可用、可執行的實體，始可稱為實現體。目前依據X的規範架構所開發撰寫成的實現體中，以<a href="/wiki/X.Org_Server" title="X.Org Server">X.Org</a>最為普遍且最受歡迎。X.Org所用的協定版本，X11，是在1987年9月所發布。而今最新的<a class="new" href="/w/index.php?title=%E5%8F%83%E8%80%83%E5%AF%A6%E4%BD%9C&amp;action=edit&amp;redlink=1" title="參考實作（頁面不存在）">參考實作</a>（參考性、示範性的實作體）版本則是X11 Release 7.7（簡稱：X11R7.7），而此專案由<a href="/wiki/X.Org%E5%9F%BA%E9%87%91%E4%BC%9A" title="X.Org基金會">X.Org基金會</a>所領導，且是以<a href="/wiki/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89" title="MIT許可證">MIT授權</a>和相似的授權許可的<a href="/wiki/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6" title="自由軟體">自由軟體</a>。<sup class="reference" id="cite_ref-1"><a href="#cite_note-1">[1]</a></sup>
</p>, <p><br/>
X能為<a href="/wiki/%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2" title="圖形化使用者介面">GUI</a>環境提供基本的框架：在<a href="/wiki/%E6%98%BE%E7%A4%BA%E5%99%A8" title="顯示器">螢幕</a>上描繪、呈現圖像與移動程式<a href="/wiki/%E8%A6%96%E7%AA%97" title="視窗">視窗</a>，同時也受理、執行、及管理電腦與<a href="/wiki/%E9%BC%A0%E6%A0%87" title="滑鼠">滑鼠</a>、<a class="mw-redirect" href="/wiki/%E9%94%AE%E7%9B%98" title="鍵盤">鍵盤</a>的互動程式。不過，X並沒有管轄到<a href="/wiki/%E4%BA%BA%E6%9C%BA%E4%BA%A4%E4%BA%92" title="人機互動">使用者介面</a>的部份，而是由其他以X為基礎的實現體來負責，也因為如此，以X為基礎環境所開發成的視覺樣式非常地多；不同的程式可能有截然不同的介面呈現。
</p>, <p>X採用<a class="mw-redirect" href="/wiki/C/S%E7%BB%93%E6%9E%84" title="主從式結構">主從式</a>的架構模型，由一個<i>X伺服器</i>與多個<i>X客戶端</i>程式進行通訊，伺服器接受對於圖形輸出（視窗）的請求並反應用戶輸入（鍵盤、滑鼠、觸控式螢幕），伺服器可能是一個能顯示到其他顯示系統的應用程式，也可能是控制某個PC的視訊輸出的系統程式，也可能是個特殊硬體。 
</p>, <p>X的一大特點在於「<a class="mw-disambig" href="/wiki/%E7%BD%91%E7%BB%9C" title="網路">網路</a>透明性」<sup class="reference" id="cite_ref-2"><a href="#cite_note-2">[2]</a></sup>：應用程式（「客戶端」應用程式）所執行的機器，不一定是使用者原生的機器（顯示的「伺服器」）。X中所提及的「<a href="/wiki/%E5%AE%A2%E6%88%B7%E7%AB%AF" title="客戶端">客戶端</a>」和「<a href="/wiki/%E6%9C%8D%E5%8A%A1%E5%99%A8" title="伺服器">伺服器</a>」等字眼用詞也經常與人們一般想定的相反，「伺服器」反而是在使用者本地端的自有機器上執行，而非是在遠端的另一部機器上執行。
</p>, <p>伺服器和客戶端之間的<a href="/wiki/%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE" title="網路傳輸協定">通信協定</a>的運作對<a href="/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C" title="電腦網路">電腦網路</a>是透明的：客戶端和伺服器可以在同一台電腦上，也可以不是，或許其<a href="/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84" title="電腦系統結構">架構</a>和<a href="/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" title="作業系統">作業系統</a>也不同，但都能執行。客戶機和伺服器還能夠使用安全連接在<a href="/wiki/%E4%BA%92%E8%81%94%E7%BD%91" title="網際網路">網際網路</a>上<a href="/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AE%89%E5%85%A8" title="電腦安全">安全</a>地通訊。
</p>, <p>為了使遠端客戶程式顯示到本地伺服器，用戶一般需要啟動一個<a class="mw-redirect" href="/wiki/%E7%BB%88%E7%AB%AF%E6%A8%A1%E6%8B%9F%E5%99%A8" title="終端模擬器">終端機視窗</a>和到達遠端電腦的<a href="/wiki/Telnet" title="Telnet">telnet</a>或者<a href="/wiki/Secure_Shell" title="Secure Shell">ssh</a>，令其顯示到用戶電腦，（例如：在執行<a href="/wiki/Bash" title="Bash">bash</a>的遠端電腦上<tt>export DISPLAY=</tt><i>[用戶的電腦]</i><tt>:0</tt>）然後啟動客戶端。然後客戶端就會連接到本地電腦，並且遠端應用程式會顯示到本地螢幕並被本地輸入裝置所控制。與之對應，本地電腦上也可以執行一個連接到遠端電腦的小型代理程式，並在該端啟動與執行自有需求與指定的應用程式。
</p>, <p>實際的遠端客戶端的例子有：圖形化管理遠端電腦；在遠端UNIX電腦上執行計算密集的仿真程式並把結果顯示到原生的Windows桌面電腦；用一套顯示器、鍵盤和滑鼠控制同時執行在多台電腦上的圖形化軟體。
</p>, <p>X的設計原則，早在最初仍在麻省理工學院的階段（1984年）就已經成形，由<span class="ilh-all" data-foreign-title="Bob Scheifler" data-lang-code="en" data-lang-name="英語" data-orig-title="鲍伯·斯凯夫勒"><span class="ilh-page"><a class="new" href="/w/index.php?title=%E9%B2%8D%E4%BC%AF%C2%B7%E6%96%AF%E5%87%AF%E5%A4%AB%E5%8B%92&amp;action=edit&amp;redlink=1" title="鮑伯·斯凱夫勒（頁面不存在）">鮑伯·斯凱夫勒</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/Bob_Scheifler" title="en:Bob Scheifler"><span dir="auto" lang="en">Bob Scheifler</span></a></span>）</span></span>和<span class="ilh-all" data-foreign-title="Jim Gettys" data-lang-code="en" data-lang-name="英語" data-orig-title="吉姆·杰提斯"><span class="ilh-page"><a class="new" href="/w/index.php?title=%E5%90%89%E5%A7%86%C2%B7%E6%9D%B0%E6%8F%90%E6%96%AF&amp;action=edit&amp;redlink=1" title="吉姆·傑提斯（頁面不存在）">吉姆·傑提斯</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/Jim_Gettys" title="en:Jim Gettys"><span dir="auto" lang="en">Jim Gettys</span></a></span>）</span></span>兩人制訂出X最早的開發、強化、改進原則，原則大體如下：
</p>, <p>之後，上述原則中的第一項原則在設計X11時被加以修改，修訂成：<i>「除非已有真正的應用程式，真的需要X為其修訂、增訂等支援，否則不會為X增加新功能。」</i>X基本上一直遵循這些原則，參考實現的擴展及改進也是以此原則的角度來著手，也因為奉行上述原則，使至今的最新版X仍能與最初（1987年）發布的協定標準近乎完全相容。
</p>, <p>X刻意不去規範應用程式在<a href="/wiki/%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2" title="使用者介面">使用者介面</a>上的具體細節設計，這些包括<a href="/wiki/%E6%8C%89%E9%92%AE" title="按鈕">按鈕</a>、<a class="mw-redirect" href="/wiki/%E9%80%89%E5%8D%95" title="選單">選單</a>和視窗的<a class="new" href="/w/index.php?title=%E6%A8%99%E9%A1%8C%E6%AC%84&amp;action=edit&amp;redlink=1" title="標題欄（頁面不存在）">標題欄</a>等等，這些都由<a href="/wiki/%E7%AA%97%E5%8F%A3%E7%AE%A1%E7%90%86%E5%99%A8" title="視窗管理員">視窗管理器</a>（window manager）、GUI<a class="mw-redirect" href="/wiki/%E6%9E%84%E4%BB%B6%E5%B7%A5%E5%85%B7%E5%8C%85" title="構件工具包">構件工具包</a>、<a href="/wiki/%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83" title="桌面環境">桌面環境</a>（desktop environment）或者應用程式指定的GUI（如<a href="/wiki/%E9%8A%B7%E5%94%AE%E6%99%82%E9%BB%9E%E6%83%85%E5%A0%B1%E7%B3%BB%E7%B5%B1" title="銷售時點情報系統">POS</a>）等等的用戶軟體來提供，然而因為架構設計上保留了高度的彈性發揮空間，致使多年來X在「基礎、典型、一般性」的使用者介面上，也都有數目驚人的多樣性選擇。 
</p>, <p>在X的系統架構中，視窗管理器用於控制視窗程式的位置和外觀，其介面類似Microsoft的Windows或者Macintosh（例如：KDE的<a href="/wiki/KWin" title="KWin">KWin</a>或者GNOME的<a href="/wiki/Metacity" title="Metacity">Metacity</a>），不過在控制機制上卻截然不同（例如：X提供的基本視窗管理器<a class="new" href="/w/index.php?title=Twm&amp;action=edit&amp;redlink=1" title="Twm（頁面不存在）">twm</a>）。視窗管理器可能只是個框架（例如：twm），但也可能提供了全套的桌面環境功能（例如：<a href="/wiki/Enlightenment" title="Enlightenment">Enlightenment</a>）。
</p>, <p>雖然不同的X使用者介面可以有很大的差距、差異，然而絕大多數的用戶在使用X時，多是用已經高度全套化的<a href="/wiki/%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83" title="桌面環境">桌面環境</a>，桌面環境不僅有視窗管理器，還具備各種應用程式以及協調一致的介面，目前最流行的桌面環境是<a href="/wiki/GNOME" title="GNOME">GNOME</a>和<a href="/wiki/KDE" title="KDE">KDE</a>，此兩者已普遍使用於Linux作業系統上，而UNIX所用的標準桌面環境多是<a href="/wiki/CDE" title="CDE">通用桌面環境CDE</a>，然而也有些UNIX也開始採行GNOME。
</p>, <p>此外，X桌面環境及組件雖然極其多樣，但同時也需要保持相容性與互通性，關於此則有<a href="/wiki/Freedesktop.org" title="Freedesktop.org">freedesktop.org</a>積極與努力地維持各種不同X桌面環境的相容性，使相競態勢下仍不失X的相容本色。
</p>, <p>X的標準實現是X.Org的<a class="new" href="/w/index.php?title=%E5%8F%82%E8%80%83%E5%AE%9E%E7%8E%B0&amp;action=edit&amp;redlink=1" title="參考實現（頁面不存在）">參考實現</a>。由於其<a class="mw-disambig" href="/wiki/%E8%AE%B8%E5%8F%AF%E8%AF%81" title="許可證">許可證</a>比較寬鬆，出現了大量<a href="/wiki/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6" title="自由軟體">自由的</a>或者<a href="/wiki/%E4%B8%93%E6%9C%89%E8%BD%AF%E4%BB%B6" title="專有軟體">專有的</a>實現。商業的UNIX商家傾向於採用參考實現並使之適應其硬體，例如高度客製化並加入專有的擴充。
</p>, <p>直到2004年，在自由的<a href="/wiki/%E7%B1%BBUnix%E7%B3%BB%E7%BB%9F" title="類Unix系統">類UNIX</a>系統上最常見的X變體是<a href="/wiki/XFree86" title="XFree86">XFree86</a>。顧名思義，它源於X的<a href="/wiki/Intel_80386" title="Intel 80386">386</a>相容的PC機的<a href="/wiki/%E7%A7%BB%E6%A4%8D_(%E8%BB%9F%E9%AB%94)" title="移植 (軟體)">移植</a>，到了上個（20）世紀90年代末期成為X的技術創新的主要來源和X開發的事實標準<sup class="reference" id="cite_ref-4"><a href="#cite_note-4">[4]</a></sup>。但是從2004年起，最流行的X伺服器是XFree86的<a class="mw-redirect" href="/wiki/Fork" title="Fork">分支</a>—<a href="/wiki/X.Org_Server" title="X.Org Server">X.Org的參考實現</a>。
</p>, <p>雖然X一般和UNIX聯絡在一起，X伺服器也能夠自然地存在於其他圖形環境。<a href="/wiki/%E8%BF%AA%E5%90%89%E5%A4%9A" title="迪吉多">DEC</a>／<a class="mw-redirect" href="/wiki/%E5%BA%B7%E6%9F%8F%E9%9B%BB%E8%85%A6" title="康柏電腦">COMPAQ</a>／<a class="mw-redirect" href="/wiki/%E6%83%A0%E6%99%AE%E5%85%AC%E5%8F%B8" title="惠普公司">HP</a>的<a href="/wiki/OpenVMS" title="OpenVMS">OpenVMS</a>作業系統用X加上<a href="/wiki/CDE" title="CDE">CDE</a>做為其標準桌面環境，稱為<a class="new" href="/w/index.php?title=DECwindows&amp;action=edit&amp;redlink=1" title="DECwindows（頁面不存在）">DECwindows</a>。<a href="/wiki/%E8%98%8B%E6%9E%9C%E5%85%AC%E5%8F%B8" title="蘋果公司">蘋果公司</a>的<a class="mw-redirect" href="/wiki/Mac_OS_X_v10.3" title="Mac OS X v10.3">Mac OS X v10.3</a>（研發時的代號：Panther，美洲豹）包括<a class="mw-redirect" href="/wiki/Apple_X11" title="Apple X11">Apple X11</a>，它基於XFree86 4.3和X11R6.6，並能和<a class="mw-redirect" href="/wiki/Mac_OS_X" title="Mac OS X">Mac OS X</a>更好地整合。 
</p>, <p><a href="/wiki/%E5%BE%AE%E8%BD%AF" title="微軟">Microsoft</a>的<a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Windows</a>本身不包含對X的支援，但是有不少協力的實現可用，其中有<a href="/wiki/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6" title="自由軟體">自由軟體</a>如<a href="/wiki/Cygwin/X" title="Cygwin/X">Cygwin/X</a>、<a href="/wiki/Xming" title="Xming">Xming</a>、WeirdMind<sup class="reference" id="cite_ref-5"><a href="#cite_note-5">[5]</a></sup>和<a class="new" href="/w/index.php?title=WeirdX&amp;action=edit&amp;redlink=1" title="WeirdX（頁面不存在）">WeirdX</a>，另外專有、專屬性的也有<a class="new" href="/w/index.php?title=Xmanager&amp;action=edit&amp;redlink=1" title="Xmanager（頁面不存在）">Xmanager</a>、<a class="new" href="/w/index.php?title=X-Deep/32&amp;action=edit&amp;redlink=1" title="X-Deep/32（頁面不存在）">X-Deep/32</a>、<a class="new" href="/w/index.php?title=X-Win32&amp;action=edit&amp;redlink=1" title="X-Win32（頁面不存在）">X-Win32</a>、<a class="new" href="/w/index.php?title=WiredX&amp;action=edit&amp;redlink=1" title="WiredX（頁面不存在）">WiredX</a>和<a class="new" href="/w/index.php?title=Exceed&amp;action=edit&amp;redlink=1" title="Exceed（頁面不存在）">Exceed</a>。它們多用於控制遠端X客戶端。
</p>, <p>當X寄生在其他視窗系統（例如：Windows或Mac OS）時，X系統一般是「rootless，無根」的，也就是說：宿主（主體）視窗系統擔當根視窗（背景和相關選單）並管理寄生（客體）的X視窗的位置。但是也有些伺服器，例如Exceed，能夠在宿主系統上建立根視窗使得遠端客戶端能夠做為分離的視窗在其上顯示。
</p>, <p><b>X終端機</b>（<b>X Terminal</b>）是做為僅執行X伺服器的<a href="/wiki/%E7%98%A6%E5%AE%A2%E6%88%B7%E7%AB%AF" title="瘦客戶端">瘦客戶機</a>的專用硬體。該架構廣泛用於為了使多人同時使用同一個大型伺服器而構造終端。這也符合MIT的計劃的初衷。
</p>, <p>X終端搜尋網路，使用<a class="new" href="/w/index.php?title=XDMCP&amp;action=edit&amp;redlink=1" title="XDMCP（頁面不存在）">XDMCP</a>產生允許其執行客戶機的主機列表。初始主機需要執行<a href="/wiki/X%E6%98%BE%E7%A4%BA%E7%AE%A1%E7%90%86%E5%99%A8" title="X顯示管理器">X顯示管理器</a>。
</p>, <p>獨用性的X終端機（硬體）現在已經不太常見了，現在經常使用<a href="/wiki/%E4%B8%AA%E4%BA%BA%E7%94%B5%E8%84%91" title="個人電腦">個人電腦</a>並搭配執行X終端機的實效類比程式（Emulator）來完成相同的功能，過去（1990年代初期）業界在推行X終端機時也將其稱為「窮人的UNIX工作站」。
</p>, <p>在《<span class="ilh-all" data-foreign-title="UNIX-HATERS Handbook" data-lang-code="en" data-lang-name="英語" data-orig-title="UNIX痛恨者手冊"><span class="ilh-page"><a class="new" href="/w/index.php?title=UNIX%E7%97%9B%E6%81%A8%E8%80%85%E6%89%8B%E5%86%8A&amp;action=edit&amp;redlink=1" title="UNIX痛恨者手冊（頁面不存在）">UNIX痛恨者手冊</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/UNIX-HATERS_Handbook" title="en:UNIX-HATERS Handbook"><span dir="auto" lang="en">UNIX-HATERS Handbook</span></a></span>）</span></span>》一書中有個章節為："X視窗所造成的災禍（The X-Windows Disaster）"<sup class="reference" id="cite_ref-6"><a href="#cite_note-6">[6]</a></sup>，該書用此整個章節的篇幅內容來討論X在20世紀80年代末到同世紀90年代初的問題與困擾。
</p>, <p>在<a href="/wiki/%E4%B8%AA%E4%BA%BA%E7%94%B5%E8%84%91" title="個人電腦">PC</a>世界裡，需要協力硬體的驅動的非主流的個人電腦軟體往往不能支援所有為<a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Microsoft Windows</a>出品的裝置。X Window也不例外，它的實現往往缺少較新（或者非常舊）的<a href="/wiki/%E6%98%BE%E7%A4%BA%E5%8D%A1" title="顯示卡">顯示卡</a>高效驅動程式。 
</p>, <p><a href="/wiki/X.Org%E5%9F%BA%E9%87%91%E4%BC%9A" title="X.Org基金會">X.org</a>和<a href="/wiki/XFree86" title="XFree86">XFree86</a>這樣的<a href="/wiki/%E5%BC%80%E6%94%BE%E6%BA%90%E4%BB%A3%E7%A0%81" title="開放原始碼">開源</a>X實現中，開發社區透過復用已有代碼，可以很快更新改進驅動程式，從而能夠為較陳舊的或者很通用的硬體開發出高品質的驅動。
</p>, <p>高效能圖形計算目前是頂級的圖形功能，一般由廠家透過專有驅動來實現，而且往往優先考慮是<a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Windows</a>（最大的消費市場）。由於高效能影片市場的顯赫地位，一些硬體／驅動廠商會考慮透過將技術細節變為商業秘密或者將其中創新變為<a href="/wiki/%E8%BD%AF%E4%BB%B6%E4%B8%93%E5%88%A9" title="軟體專利">軟體專利</a>，而這阻礙了開源驅動的實現。
</p>, <p>在<a href="/wiki/%E4%B8%AA%E4%BA%BA%E7%94%B5%E8%84%91" title="個人電腦">PC</a>機之外的世界裡，很多X的實現是為非傳統裝置如<a class="mw-redirect" href="/wiki/PDA" title="PDA">PDA</a>和<a href="/wiki/%E7%A7%BB%E5%8A%A8%E7%94%B5%E8%AF%9D" title="行動電話">手機</a>而編寫（或者移植）的。這樣的實現必須提供為在此之上執行的平台提供至少且必須的裝置支援。
</p>, <p>X Window的<b>主從式體系</b>（主從式架構）設計在應用程式和影片硬體之間多加了一層軟體，導致繪圖效率下降，所以引起了一些批評。因此開發了若干擴充，在裝置和客戶機在同一個系統上時，透過在取得適當許可的情況下，以直接存取裝置來改善這一問題。而在<a href="/wiki/Linux" title="Linux">Linux</a>上，一些影片驅動已經部分移入<a href="/wiki/%E5%86%85%E6%A0%B8" title="核心">核心</a>以提高效率。
</p>, <p>另一方面，X也被批評為需要（或者提供）了過多的對硬體的直接存取，從而影響了系統穩定性。行為不良的顯示卡驅動（有時也可能是應用程式）甚至能夠導致整個系統崩潰或者重新啟動；有時即使作業系統仍在工作，它也不能繼續彩現其顯示（這時除了重新啟動，缺乏好的恢復手段）。
</p>, <p>根本上，目前所有的桌面GUI作業系統都提供某種對硬體的直接存取，支持者認為市場已經證明為了提供圖形效能犧牲一點穩定性是值得的。或許將來隨著技術和用戶的演化這一平衡會有所變化。
</p>, <p>X刻意不去規範使用者介面和程式之間大多數的通信，導致出現了幾種非常不同的介面，同時程式之間協同困難；而客戶機之間的互操作規範<a class="mw-redirect" href="/wiki/Inter-Client_Communication_Conventions_Manual" title="Inter-Client Communication Conventions Manual">ICCCM</a>以難以正確實現而聞名。後來的標準化嘗試，如<a href="/wiki/Motif" title="Motif">Motif</a>和<a href="/wiki/CDE" title="CDE">CDE</a>，也於事無補。長久以來這已經成為用戶和程式設計師的巨大的挫折的源頭<sup class="reference" id="cite_ref-7"><a href="#cite_note-7">[7]</a></sup>。目前，程式的感觀一致性和通信一般是透過為特定桌面環境或者構件工具箱編程來處理，這也避免了直接和ICCCM接觸。
</p>, <p>X缺乏良好的網路與透明的音效系統。當用戶對音效日益期盼時，各種不相容的音效子系統便出現了。過去，大多數程式設計師只好忽略網路問題，簡單地使用原生的並且是OS獨用性的音效<a href="/wiki/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%8E%A5%E5%8F%A3" title="應用程式介面">API</a>。第一代客戶機-伺服器音效系統有<a class="new" href="/w/index.php?title=Rplay&amp;action=edit&amp;redlink=1" title="Rplay（頁面不存在）">rplay</a>和<a class="new" href="/w/index.php?title=Network_Audio_System&amp;action=edit&amp;redlink=1" title="Network Audio System（頁面不存在）">Network Audio System</a>。而最近的努力產生了<a class="new" href="/w/index.php?title=EsounD&amp;action=edit&amp;redlink=1" title="EsounD（頁面不存在）">EsounD</a>（GNOME）和<a class="new" href="/w/index.php?title=ARts&amp;action=edit&amp;redlink=1" title="ARts（頁面不存在）">ARts</a>（KDE），而這也並非標準。而其他系統如<a class="new" href="/w/index.php?title=Media_Application_Server&amp;action=edit&amp;redlink=1" title="Media Application Server（頁面不存在）">Media Application Server</a>則正在開發當中。
</p>, <p>直到最近，X也沒有好的顯示印表機所列印的內容（<a href="/wiki/%E6%89%80%E8%A6%8B%E5%8D%B3%E6%89%80%E5%BE%97" title="所見即所得">所見即所得</a>）的解決方案。許多X客戶機完全用<a href="/wiki/PostScript" title="PostScript">PostScript</a>實現列印，而這與傳送到伺服器的幾乎整個是分離的。從X11R6.3起包含了<a class="new" href="/w/index.php?title=Xprint&amp;action=edit&amp;redlink=1" title="Xprint（頁面不存在）">Xprint</a>，此時客戶機已經不錯，但是伺服器實現還不行。而從X11R6.8起實現的品質已經很好<sup class="reference" id="cite_ref-8"><a href="#cite_note-8">[8]</a></sup>，並且獲得了<a href="/wiki/%E9%83%A8%E4%BB%B6%E5%B7%A5%E5%85%B7%E7%AE%B1" title="部件工具箱">部件</a>的支援。
</p>, <p>X不能像<a href="/wiki/VNC" title="VNC">VNC</a>那樣把客戶端的通訊從一個伺服器卸下然後再附加到另一個上，但正在進行為X增加此功能的工作，另外還要實現透過VNC實現X伺服器的顯示。
</p>, <p>X伺服器和遠端客戶機之間的網路通信使用明文的缺陷，讓攻擊者使用<a class="new" href="/w/index.php?title=%E5%B0%81%E5%8C%85%E6%93%B7%E5%8F%96%E7%A8%8B%E5%BC%8F&amp;action=edit&amp;redlink=1" title="封包擷取程式（頁面不存在）">封包擷取程式</a>就能夠截獲和閱讀它。這一缺陷一般可以透過在<a href="/wiki/Secure_Shell" title="Secure Shell">SSH</a>通訊上使用X來解決。
</p>, <p>裝置中立和客戶機與伺服器分離還帶來了一定開銷。X的網路透明性要求客戶機和伺服器分別執行。在其早期，與同時的採取視窗系統嵌入作業系統這一方法的<a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Microsoft Windows</a>和<a class="mw-redirect" href="/wiki/Mac_OS" title="Mac OS">Mac OS</a>比較，這給獨立系統帶來明顯的效能影響。為了獲得可以接受的效能，推薦起碼要4到8<a class="mw-disambig" href="/wiki/MB" title="MB">MB</a>的<a href="/wiki/%E9%9A%8F%E6%9C%BA%E5%AD%98%E5%8F%96%E5%AD%98%E5%82%A8%E5%99%A8" title="隨機存取記憶體">RAM</a>，但在1990年代之前，這被認為與Windows或者Mac OS相比太超過了。
</p>, <p>目前版本的Windows和<a class="mw-redirect" href="/wiki/Mac_OS_X" title="Mac OS X">Mac OS X</a> <a href="/wiki/Quartz" title="Quartz">Quartz</a>也包含了和X的客戶機／伺服器相類似的子系統劃分，其效能和資源需求同X加上<a href="/wiki/KDE" title="KDE">KDE</a>或者<a href="/wiki/GNOME" title="GNOME">GNOME</a>也類似。現在主要的消耗來自於客戶機和伺服器之間的網路往返延遲（非協定本身產生的滯後時間），應該透過應用程式的設計來改善<sup class="reference" id="cite_ref-9"><a href="#cite_note-9">[9]</a></sup>。
</p>, <p>X在<a href="/wiki/%E7%B1%BBUnix%E7%B3%BB%E7%BB%9F" title="類Unix系統">類UNIX</a>系統上幾乎完全占據統治地位。但是仍然有人嘗試提供替代品和更多的選擇。過去曾經有<a class="mw-redirect" href="/wiki/%E6%98%87%E9%99%BD" title="昇陽">Sun</a>的<a class="new" href="/w/index.php?title=NeWS&amp;action=edit&amp;redlink=1" title="NeWS（頁面不存在）">NeWS</a>，但它遭到市場淘汰；還有<a href="/wiki/NeXT" title="NeXT">NeXT</a>的<a href="/wiki/Display_PostScript" title="Display PostScript">Display PostScript</a>，它最終轉變為<a href="/wiki/%E8%98%8B%E6%9E%9C%E5%85%AC%E5%8F%B8" title="蘋果公司">蘋果電腦</a>的<a class="mw-redirect" href="/wiki/Mac_OS_X" title="Mac OS X">Mac OS X</a>內的<a href="/wiki/Quartz" title="Quartz">Quartz</a>。
</p>, <p>應對對於X的批評的更前衛的嘗試有Berlin/<a class="mw-redirect" href="/wiki/Fresco" title="Fresco">Fresco</a>和<a class="new" href="/w/index.php?title=Y_Window_System&amp;action=edit&amp;redlink=1" title="Y Window System（頁面不存在）">Y Window System</a>這樣的完全替換。這些代用品被認為不值得採用，而任何不能做到與X向下相容的的替代品的可行性都被廣泛置疑。 
</p>, <p>其他有的競爭者透過直接操作硬體來避免X的開銷，這樣的專案包括<a href="/wiki/DirectFB" title="DirectFB">DirectFB</a>。但是由於<a class="new" href="/w/index.php?title=DRI&amp;action=edit&amp;redlink=1" title="DRI（頁面不存在）">DRI</a>正在致力於使用可靠的核心級介面提供影格緩衝，這些努力可能變成是多餘的。
</p>, <p>freedesktop.org所主持的<a href="/wiki/Wayland" title="Wayland">Wayland</a>顯示伺服器同時運用了前述兩種方法處理X的缺點，它完全替換了X的架構而且運用DRI來直接操作硬體。<a class="mw-redirect" href="/wiki/Canonical%E5%85%AC%E5%8F%B8" title="Canonical公司">Canonical公司</a>替他旗下的<a class="mw-redirect" href="/wiki/Ubuntu_Linux" title="Ubuntu Linux">Ubuntu Linux</a>作業系統開發中的<a href="/wiki/Mir_(%E6%98%BE%E7%A4%BA%E6%9C%8D%E5%8A%A1%E5%99%A8)" title="Mir (顯示伺服器)">Mir</a>是一個類似的計劃。預計支援<a href="/wiki/ARM%E6%9E%B6%E6%A7%8B" title="ARM架構">ARM</a>晶片組和<a href="/wiki/X86" title="X86">x86</a>架構的電腦。Mir透過Xmir向下相容使用X Window的程式。
</p>, <p>其他以圖形終端服務形式達到網路透明性的嘗試還有VNC（很底層的系統，透過網路傳送壓縮的點陣圖；UNIX上的實現包括X伺服器）、<a class="new" href="/w/index.php?title=Citrix_MetaFrame&amp;action=edit&amp;redlink=1" title="Citrix MetaFrame（頁面不存在）">Citrix MetaFrame</a>（類似X的Windows軟體）、<a class="new" href="/w/index.php?title=Tarantella&amp;action=edit&amp;redlink=1" title="Tarantella（頁面不存在）">Tarantella</a>（為網路瀏覽器提供Java客戶機）和<a class="new" href="/w/index.php?title=NX%E6%8A%80%E8%A1%93&amp;action=edit&amp;redlink=1" title="NX技術（頁面不存在）">NX技術</a>（用於遠端顯示的節省頻寬的協定）。
</p>, <p>事實上，早在X出現前已有幾個<a href="/wiki/%E4%BD%8D%E5%9B%BE" title="點陣圖">點陣圖</a>式的軟體顯示系統已經存在，例如<a href="/wiki/%E5%B8%95%E7%BE%85%E5%A5%A7%E5%A4%9A%E7%A0%94%E7%A9%B6%E4%B8%AD%E5%BF%83" title="帕羅奧多研究中心">帕洛阿爾托研究中心</a>（<a href="/wiki/%E6%96%BD%E4%B9%90" title="全錄">全錄公司</a>）提出的<a href="/wiki/Xerox_Alto" title="Xerox Alto">Alto</a>（1973年）和<a class="new" href="/w/index.php?title=Xerox_Star&amp;action=edit&amp;redlink=1" title="Xerox Star（頁面不存在）">Star</a>（1981年）、<a href="/wiki/%E8%98%8B%E6%9E%9C%E5%85%AC%E5%8F%B8" title="蘋果公司">蘋果電腦</a>提出的<a href="/wiki/Apple_Lisa" title="Apple Lisa">Lisa</a>（1983年）和<a class="mw-redirect" href="/wiki/%E9%BA%A6%E9%87%91%E5%A1%94%E7%94%B5%E8%84%91" title="麥金塔電腦">麥金塔</a>（1984年）、在<a href="/wiki/UNIX" title="UNIX">UNIX</a>世界也有Athena計畫（1982年）和<a class="new" href="/w/index.php?title=Rob_Pike&amp;action=edit&amp;redlink=1" title="Rob Pike（頁面不存在）">Rob Pike</a>的<a class="new" href="/w/index.php?title=Blit%E7%B5%82%E7%AB%AF%E6%A9%9F&amp;action=edit&amp;redlink=1" title="Blit終端機（頁面不存在）">Blit終端機</a>（1984年）。
</p>, <p>X從1983年之前稱為<a href="/wiki/W_Window%E7%B3%BB%E7%BB%9F" title="W Window系統">W Window系統</a>的視窗系統中，推衍出它的名字當作是繼任者（在拉丁字母裡面X直接接在W後面）。W Window系統是運行於<a class="new" href="/w/index.php?title=V%EF%BC%88%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1%EF%BC%89&amp;action=edit&amp;redlink=1" title="V（作業系統）（頁面不存在）">V</a><a href="/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" title="作業系統">作業系統</a>。W使用一個支援終端機和圖形視窗的網路協定，而伺服器維護顯示的列表。
</p>, <p>X起初是<a href="/wiki/%E9%BA%BB%E7%9C%81%E7%90%86%E5%B7%A5%E5%AD%A6%E9%99%A2" title="麻省理工學院">MIT</a>於1984年的構想，當作為<a href="/wiki/%E9%9B%85%E5%85%B8%E5%A8%9C%E5%B7%A5%E7%A8%8B" title="雅典娜工程">Athena計畫</a>的<span class="ilh-all" data-foreign-title="Jim Gettys" data-lang-code="en" data-lang-name="英語" data-orig-title="吉姆·給提"><span class="ilh-page"><a class="new" href="/w/index.php?title=%E5%90%89%E5%A7%86%C2%B7%E7%B5%A6%E6%8F%90&amp;action=edit&amp;redlink=1" title="吉姆·給提（頁面不存在）">吉姆·給提</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/Jim_Gettys" title="en:Jim Gettys"><span dir="auto" lang="en">Jim Gettys</span></a></span>）</span></span>和MIT電腦科學實驗室的<span class="ilh-all" data-foreign-title="Bob Scheifler" data-lang-code="en" data-lang-name="英語" data-orig-title="鮑伯·斯凱夫勒"><span class="ilh-page"><a class="new" href="/w/index.php?title=%E9%AE%91%E4%BC%AF%C2%B7%E6%96%AF%E5%87%B1%E5%A4%AB%E5%8B%92&amp;action=edit&amp;redlink=1" title="鮑伯·斯凱夫勒（頁面不存在）">鮑伯·斯凱夫勒</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/Bob_Scheifler" title="en:Bob Scheifler"><span dir="auto" lang="en">Bob Scheifler</span></a></span>）</span></span>的共同研究。Scheifler需要一個可以使用的顯示環境來對<a class="new" href="/w/index.php?title=Argus%E7%B3%BB%E7%B5%B1&amp;action=edit&amp;redlink=1" title="Argus系統（頁面不存在）">Argus系統</a>除錯。Athena計畫，是<a href="/wiki/%E8%BF%AA%E5%90%89%E5%A4%9A" title="迪吉多">DEC</a>、MIT、和<a href="/wiki/IBM" title="IBM">IBM</a>之間的聯合計畫，用來提供給需要一個平台獨立顯示系統，可把不同種類多個製造商之系統連結在一起，給所有學生容易存取電腦資源；該視窗系統曾經在<a class="mw-redirect" href="/wiki/%E5%8D%A1%E5%86%85%E5%9F%BA%E6%A2%85%E9%9A%86%E5%A4%A7%E5%AD%A6" title="卡內基梅隆大學">卡內基美隆大學</a>（Carnegie Mellon University，CMU）的Athena計畫中發展過，但是在授權上並可能得到且沒有其他可替代可選擇。
</p>, <p>該計畫藉由創立一個可以執行本地應用程式且能夠拜訪遠端資源的協定來解決這個問題。起初在1983年中期W視窗系統的UNIX移植在V作業系統下以1/4速度運行；在1984年5月，Scheilfer將W的<a class="mw-disambig" href="/wiki/%E9%9D%9E%E5%90%8C%E6%AD%A5" title="非同步">同步</a><a class="mw-redirect mw-disambig" href="/wiki/%E5%8D%94%E5%AE%9A" title="協定">協定</a>換成<a class="mw-disambig" href="/wiki/%E9%9D%9E%E5%90%8C%E6%AD%A5" title="非同步">非同步</a>協定，以及將顯示列表換成直接模式繪圖，而創造出X的版本1。X是第一個真正的硬體和製造商無關的視窗系統環境。
</p>, <p>Scheifler、Gettys和<a class="new" href="/w/index.php?title=Ron_Newman%EF%BC%88%E9%9B%BB%E8%85%A6%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88%E5%B8%AB%EF%BC%89&amp;action=edit&amp;redlink=1" title="Ron Newman（電腦程式設計師）（頁面不存在）">Ron Newman</a>著手工作且X快速地進展著。版本6於1985年1月推出。DEC正準備要推出它的第一個<a class="new" href="/w/index.php?title=Ultrix&amp;action=edit&amp;redlink=1" title="Ultrix（頁面不存在）">Ultrix</a>工作站，且X是唯一最有希望即時準備妥當的視窗系統。於是X6被移植到<a class="new" href="/w/index.php?title=MicroVAX&amp;action=edit&amp;redlink=1" title="MicroVAX（頁面不存在）">MicroVAX</a>的DEC QVSS顯示器。
</p>, <p>1985年第二季，為了支援DEC的<a class="new" href="/w/index.php?title=VAXstation&amp;action=edit&amp;redlink=1" title="VAXstation（頁面不存在）">VAXstation</a>-II/GPX增加了色彩支援，由此形成了版本9。儘管MIT此前已經免費許可X6給一些外部群體，它此時決定在後來演變為<a href="/wiki/MIT%E8%A8%B1%E5%8F%AF%E8%AD%89" title="MIT許可證">MIT授權</a>的許可證下發放對X9和後續版本。X9於1985年9月發布。
</p>, <p><a href="/wiki/%E5%B8%83%E6%9C%97%E5%A4%A7%E5%AD%A6" title="布朗大學">布朗大學</a>的一些人將版本9移植到<a href="/wiki/IBM" title="IBM">IBM</a> <a class="new" href="/w/index.php?title=RT/PC&amp;action=edit&amp;redlink=1" title="RT/PC（頁面不存在）">RT/PC</a>，為了讀取RT的非對齊資料對協定做了不相容的修改，導致1985年稍後發布版本10。1986年有若干外部團體對X提出需要。X10R2發布於1986年1月。1986年2月的X10R3是第一個廣泛發行的版本，DEC和<a class="mw-redirect" href="/wiki/%E6%83%A0%E6%99%AE%E5%85%AC%E5%8F%B8" title="惠普公司">惠普</a>都基於它發布產品。別的一些團體把X10移植到<a href="/wiki/%E9%98%BF%E6%B3%A2%E7%BE%85%E9%9B%BB%E8%85%A6" title="阿波羅電腦">Apollo</a>或者<a class="mw-redirect" href="/wiki/%E6%98%87%E9%99%BD" title="昇陽">Sun</a>工作站甚至IBM <a href="/wiki/IBM_PC_AT" title="IBM PC AT">PC/AT</a>。X10的最後一個版本X10R4於1986年12月發布。 
</p>, <p>儘管X10既有趣又強大，但很明顯在X被更加廣泛地採納前人們期待X的協定更加裝置中立；但是這樣大規模地完全重新設計所要求地資源超出了MIT自身能夠提供的。於是DEC的<a class="new" href="/w/index.php?title=Western_Software_Laboratory&amp;action=edit&amp;redlink=1" title="Western Software Laboratory（頁面不存在）">Western Software Laboratory</a>躋身該專案。DEC WSL的<a class="new" href="/w/index.php?title=Smokey_Wallace&amp;action=edit&amp;redlink=1" title="Smokey Wallace（頁面不存在）">Smokey Wallace</a>，另外還有Jim Gettys提議X11在DEC WSL建立，但能夠使用與X9和X10同樣的方法自由取得。該專案於1986年5月開始，協定部分於8月結束，軟體的alpha（內部）測試於1987年2月就，beta（外部）測試開始於5月。X11最終於1987年9月15日發布。
</p>, <p>X11協定設計由Scheifler領導，並在nascent <a href="/wiki/%E4%BA%92%E8%81%94%E7%BD%91" title="網際網路">Internet</a>的開放郵寄清單上廣泛討論。於是X成為最早的較大規模的開源軟體專案之一。
</p>, <p>1987年，隨著X11取得明顯成功，MIT希望免除X的管理責任。但是1987年6月與9個廠商舉行會晤，這些廠商表示他們相信為了避免X由於商業因素而分裂，需要中立方的參與。1988年1月，X協會（X Consortium）做為<a href="/wiki/%E9%9D%9E%E7%87%9F%E5%88%A9%E7%B5%84%E7%B9%94" title="非營利組織">非營利廠商團體</a>而成立，由Scheifler擔任主管，而<a class="new" href="/w/index.php?title=Keith_Packard&amp;action=edit&amp;redlink=1" title="Keith Packard（頁面不存在）">Keith Packard</a>擔任進階<a href="/wiki/%E7%A8%8B%E5%BA%8F%E5%91%98" title="程式設計師">開發人員</a>，確保X能持續以中立超然的立場提供商業與學術教育所需的開發。此後<b>MIT X協會</b>（MIT X Consortium）完成了一系列重要的X11版本，第一個就是1988年1月的版本2（X11R2）。
</p>, <p>1993年，<b>X協會公司</b>（X Consortium, Inc.；<a href="/wiki/%E9%9D%9E%E7%87%9F%E5%88%A9%E7%B5%84%E7%B9%94" title="非營利組織">非營利性質的公司</a>）做為MIT X協會的接繼者而成立。它於1994年5月16日發布了X11R6。1995年X協會公司接手了UNIX系統的<a href="/wiki/Motif" title="Motif">Motif</a>工具箱和<a href="/wiki/CDE" title="CDE">CDE</a>（<a class="mw-redirect" href="/wiki/Common_Desktop_Environment" title="Common Desktop Environment">Common Desktop Environment</a>）共通桌面環境。而原有的X協會在發布了最後一個版本的X11R6.3後，於1996年末解散。
</p>, <p>1997年中，X Consortium將X的管理交給<a class="mw-redirect" href="/wiki/%E9%96%8B%E6%94%BE%E5%9C%98%E9%AB%94" title="開放團體">開放團體</a>，而它是1996年由<a href="/wiki/%E9%96%8B%E6%94%BE%E8%BB%9F%E9%AB%94%E5%9F%BA%E9%87%91%E6%9C%83" title="開放軟體基金會">開放軟體基金會</a>（OSF）和<a href="/wiki/X/Open" title="X/Open">X/Open</a>合併成立的廠商團體。
</p>, <p>開放團體於1998年首次發布X11R6.4。為了確保X開發上的資金，所以X11R6.4偏離傳統的自由許可條款，進而引起爭議<sup class="reference" id="cite_ref-10"><a href="#cite_note-10">[10]</a></sup>。新條款阻礙了許多專案（例如：XFree86）採納它，甚至包括一些廠商。在XFree86以分離相威脅後<sup class="reference" id="cite_ref-11"><a href="#cite_note-11">[11]</a></sup>，X11R6.4於1998年9月在傳統許可條款下發布<sup class="reference" id="cite_ref-12"><a href="#cite_note-12">[12]</a></sup>，而開放團體的最後一個發布是X11R6.4 patch 3，即第三度發布的補強程式。
</p>, <p>1999年5月開放團體組建了<a href="/wiki/X.Org_Server" title="X.Org Server">X.Org</a>。X.Org指導了X11R6.5.1之前的版本發布。在此期間X的開發死氣沉沉<sup class="reference" id="cite_ref-13"><a href="#cite_note-13">[13]</a></sup>。2003年，隨著Linux的流行X被大量安裝。但是X.Org幾乎無聲無息，活躍的開發由XFree86承擔。<sup class="reference" id="cite_ref-14"><a href="#cite_note-14">[14]</a></sup>
</p>, <p>在1989年至1990年期間，托馬斯·羅爾把X11R4分類器上提供的X伺服器程式的原始碼下載到執行速度僅為33MHz的386PC上，成功執行了被他稱為是X38611.1的X伺服器。這就是XFree86的雛形。
</p>, <p>1992年後多數技術創新都發生在XFree86專案中。1999年，由於眾多對於XFree86在Linux上應用有興趣的硬體廠商<sup class="reference" id="cite_ref-15"><a href="#cite_note-15">[15]</a></sup>的推動，並也已經成為最普及的X版本，XFree86成為X.Org的榮譽成員（不付費）<sup class="reference" id="cite_ref-16"><a href="#cite_note-16">[16]</a></sup>。
</p>, <p>但是自2003年開始，XFree86內部卻發生了爭論。它被認為太<a href="/wiki/%E5%A4%A7%E6%95%99%E5%A0%82%E5%92%8C%E5%B8%82%E9%9B%86" title="大教堂和市集">教堂式</a>了，如同它的開發模式；開發者不能透過<a href="/wiki/%E5%8D%94%E4%BD%9C%E7%89%88%E6%9C%AC%E7%B3%BB%E7%B5%B1" title="協作版本系統">CVS</a>做提交<sup class="reference" id="cite_ref-17"><a href="#cite_note-17">[17]</a></sup>，而廠商被迫維護大量<a href="/wiki/Patch" title="Patch">修補程式</a><sup class="reference" id="cite_ref-18"><a href="#cite_note-18">[18]</a></sup>。2003年3月，自從最初的MIT X Consortium結束之後就參加XFree86的Keith Packard由於被認為態度不良而被驅逐<sup class="reference" id="cite_ref-19"><a href="#cite_note-19">[19]</a></sup><sup class="reference" id="cite_ref-20"><a href="#cite_note-20">[20]</a></sup>
<sup class="reference" id="cite_ref-21"><a href="#cite_note-21">[21]</a></sup>
</p>, <p>X.Org和XFree86開始討論能夠有助於X開發的重組<sup class="reference" id="cite_ref-22"><a href="#cite_note-22">[22]</a></sup><sup class="reference" id="cite_ref-23"><a href="#cite_note-23">[23]</a></sup><sup class="reference" id="cite_ref-24"><a href="#cite_note-24">[24]</a></sup>Jim Gettys早在2000年就熱心於開放的開發模式<sup class="reference" id="cite_ref-25"><a href="#cite_note-25">[25]</a></sup>。Gettys、Packard和其他幾個人開始討論有效管理X和開放式開發的細節。
</p>, <p>最終就像是X11R6.4許可證爭議的迴響，XFree86於2004年2月在更加嚴格許可證下發布了4.4。許多依賴X的專案認為該許可證無法接受<sup class="reference" id="cite_ref-26"><a href="#cite_note-26">[26]</a></sup>，特別是它和<a href="/wiki/GNU%E9%80%9A%E7%94%A8%E5%85%AC%E5%85%B1%E8%AE%B8%E5%8F%AF%E8%AF%81" title="GNU通用公共許可證">GNU General Public License</a><sup class="reference" id="cite_ref-autogenerated1_27-0"><a href="#cite_note-autogenerated1-27">[27]</a></sup>不相容。這引起一場論戰，許多人認為到了該對<a href="/wiki/XFree86" title="XFree86">XFree86</a>分叉（fork）<sup class="reference" id="cite_ref-28"><a href="#cite_note-28">[28]</a></sup>的時候了，許多Linux發行版，包括<a href="/wiki/Fedora" title="Fedora">Fedora</a>、<a href="/wiki/Gentoo_Linux" title="Gentoo Linux">Gentoo</a>都紛紛在最新的版本中使用<a href="/wiki/X.Org%E5%9F%BA%E9%87%91%E4%BC%9A" title="X.Org基金會">X.Org基金會</a>的發布代替<a href="/wiki/XFree86" title="XFree86">XFree86</a>。
</p>, <p>2004年年初<a href="/wiki/X.Org%E5%9F%BA%E9%87%91%E4%BC%9A" title="X.Org基金會">X.Org基金會</a>成立。這意味著X在管理上的根本轉變。1988年以來X的管理者（包括過去的X.Org）都是廠商組織，而基金會由軟體開發者領導，採用依靠外部參與的<a href="/wiki/%E5%A4%A7%E6%95%99%E5%A0%82%E5%92%8C%E5%B8%82%E9%9B%86" title="大教堂和市集">市集</a>模式的社區開發。其成員身分對個人開放，法人成員則成為贊助者。X.Org還開始同<a href="/wiki/Freedesktop.org" title="Freedesktop.org">freedesktop.org</a>密切合作。
</p>, <p>在XFree86 4.4RC2基礎上合併了X11R6.6的修改，基金會在2004年4月發布了X11R6.7。Gettys和Packard使用了在舊許可證下發布的XFree86的最後的版本，但是強調了開放的開發模式並保持了與GPL的相容性，從而帶來了很多過去XFree86的開發者<sup class="reference" id="cite_ref-autogenerated1_27-1"><a href="#cite_note-autogenerated1-27">[27]</a></sup>。
</p>, <p>2004年9月X11R6.8發布。它加入重要的新特性，包括對半透明視窗的初步支援、很多複雜的視覺效果、螢幕放大和簡圖，以及與3D沉浸式顯示系統（例如Sun的<a class="new" href="/w/index.php?title=Project_Looking_Glass&amp;action=edit&amp;redlink=1" title="Project Looking Glass（頁面不存在）">Project Looking Glass</a>和<a class="new" href="/w/index.php?title=Croquet_project&amp;action=edit&amp;redlink=1" title="Croquet project（頁面不存在）">Croquet project</a>）整合的設施。而外觀策略由稱為<b>合成管理器</b>（compositing managers）的外部應用程式提供。
</p>, <p>有了X.Org基金會和freedesktop.org，X的開發再度加速。目前和未來的版本都將是可使用的最終產品，而不僅僅是在其上構築產品的骨架。
</p>, <p>隨著硬體操作被移入核心，幾乎對影片硬體的存取將透過<a href="/wiki/OpenGL" title="OpenGL">OpenGL</a>（沒有硬體OpenGL的系統使用<a href="/wiki/Mesa_3D" title="Mesa 3D">Mesa 3D</a>）和<a class="new" href="/w/index.php?title=%E5%9F%BA%E5%B1%82%E7%9B%B4%E6%8E%A5%E6%B8%B2%E6%9F%93&amp;action=edit&amp;redlink=1" title="基層直接彩現（頁面不存在）">基層直接彩現</a>模組進行<sup class="reference" id="cite_ref-29"><a href="#cite_note-29">[29]</a></sup>。這由XFree86 version 4引入並出現在X11R6.7及其後續版本。
</p>, <p>參考實現的架構被模組化，每個獨立模組做為分離的專案維護。X11R6.9將是單體<a href="/wiki/%E6%BA%90%E4%BB%A3%E7%A0%81" title="原始碼">原始碼</a>而X11R7.0將有具備相同特徵集的模組化原始碼。<sup class="reference" id="cite_ref-30"><a href="#cite_note-30">[30]</a></sup>。
</p>, <p>「X Window系統」一般也簡稱成「X11」或「X」，而「X Windows」的稱寫方式（類似「Microsoft Windows」的稱寫）並沒有被正式認可，不過這種誤會的稱寫法卻很普遍且經常出現（例如在<span class="ilh-all" data-foreign-title="UNIX-HATERS Handbook" data-lang-code="en" data-lang-name="英語" data-orig-title="UNIX痛恨者手冊"><span class="ilh-page"><a class="new" href="/w/index.php?title=UNIX%E7%97%9B%E6%81%A8%E8%80%85%E6%89%8B%E5%86%8A&amp;action=edit&amp;redlink=1" title="UNIX痛恨者手冊（頁面不存在）">UNIX痛恨者手冊</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/UNIX-HATERS_Handbook" title="en:UNIX-HATERS Handbook"><span dir="auto" lang="en">UNIX-HATERS Handbook</span></a></span>）</span></span>一書中）。
</p>]