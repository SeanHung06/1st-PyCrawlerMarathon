[<p><b>Unicode</b>（中文：<span lang="zh">萬國碼、國際碼、統一碼、單一碼</span>）是<a class="mw-redirect" href="/wiki/%E9%9B%BB%E8%85%A6%E7%A7%91%E5%AD%B8" title="電腦科學">電腦科學</a>領域裡的一項業界標準。它對世界上大部分的<a class="mw-redirect" href="/wiki/%E6%96%87%E5%AD%97%E7%B3%BB%E7%B5%B1" title="文字系統">文字系統</a>進行了整理、編碼，使得電腦可以用更為簡單的方式來呈現和處理文字。
</p>, <p>Unicode 伴隨著<a href="/wiki/%E9%80%9A%E7%94%A8%E5%AD%97%E7%AC%A6%E9%9B%86" title="通用字元集">通用字元集</a>的標準而發展，同時也以書本的形式<sup class="reference" id="cite_ref-1"><a href="#cite_note-1">[1]</a></sup>對外發表。Unicode 至今仍在不斷增修，每個新版本都加入更多新的字元。目前最新的版本為2019年5月公布的12.1.0<sup class="reference" id="cite_ref-Unicode12.0_2-0"><a href="#cite_note-Unicode12.0-2">[2]</a></sup>，已經收錄超過13萬個<a class="mw-disambig" href="/wiki/%E5%AD%97%E7%AC%A6" title="字元">字元</a>（第十萬個字元在2005年獲採納）。Unicode涵蓋的資料除了視覺上的字形、編碼方法、標準的<a href="/wiki/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81" title="字元編碼">字元編碼</a>外，還包含了字元特性，如大小寫字母。
</p>, <p>Unicode發展由非營利機構<a href="/wiki/%E7%B5%B1%E4%B8%80%E7%A2%BC%E8%81%AF%E7%9B%9F" title="統一碼聯盟">統一碼聯盟</a>負責，該機構致力於讓 Unicode 方案取代既有的字元編碼方案。因為既有的方案往往空間非常有限，亦不適用於<a class="mw-redirect" href="/wiki/%E5%A4%9A%E8%AA%9E" title="多語">多語</a>環境。
</p>, <p>Unicode備受認可，並廣泛地應用於電腦軟體的<a class="mw-redirect" href="/wiki/%E5%9C%8B%E9%9A%9B%E5%8C%96%E8%88%87%E6%9C%AC%E5%9C%B0%E5%8C%96" title="國際化與在地化">國際化與在地化</a>過程。有很多新科技，如<a class="mw-redirect" href="/wiki/%E5%8F%AF%E6%89%A9%E5%B1%95%E7%BD%AE%E6%A0%87%E8%AF%AD%E8%A8%80" title="可延伸標示語言">可延伸標示語言</a>（Extensible Markup Language，簡稱：XML）、<a href="/wiki/Java" title="Java">Java程式語言</a>以及現代的<a class="mw-redirect" href="/wiki/%E4%BD%9C%E6%A5%AD%E7%B3%BB%E7%B5%B1" title="作業系統">作業系統</a>，都採用Unicode編碼。
</p>, <p>Unicode是為了解決傳統的<a class="mw-redirect" href="/wiki/%E5%AD%97%E5%85%83%E7%B7%A8%E7%A2%BC" title="字元編碼">字元編碼</a>方案的侷限而產生的，例 <a href="/wiki/ISO/IEC_8859" title="ISO/IEC 8859">ISO 8859-1</a>所定義的字元雖然在不同的國家中廣泛地使用，可是在不同國家間卻經常出現不相容的情況。很多傳統的編碼方式都有一個共同的問題，即容許電腦處理雙語環境（通常使用<a href="/wiki/%E6%8B%89%E4%B8%81%E5%AD%97%E6%AF%8D" title="拉丁字母">拉丁字母</a>以及其本地語言），但卻無法同時支援多語言環境（指可同時處理多種語言混合的情況）。
</p>, <p>Unicode 編碼包含了不同寫法的字，如「<span class="Unicode">ɑ</span>／<span style="font-family: Arial;"><span class="Unicode">a</span></span>」、「強／强」、「戶／户／戸」。然而在<a href="/wiki/%E6%B1%89%E5%AD%97" title="漢字">漢字</a>方面引起了一字多形的認定爭議（詳見<a href="/wiki/%E4%B8%AD%E6%97%A5%E9%9F%93%E7%B5%B1%E4%B8%80%E8%A1%A8%E6%84%8F%E6%96%87%E5%AD%97" title="中日韓統一表意文字">中日韓統一表意文字</a>主題）。
</p>, <p>在文字處理方面，統一碼為每一個字元而非字形定義唯一的代碼（即一個整數）。換句話說，統一碼以一種抽象的方式（即數字）來處理字元，並將視覺上的演繹工作（例如字體大小、外觀形狀、字體形態、文體等）留給其他軟體來處理，例如網頁瀏覽器或是文字處理器。
</p>, <p>目前，幾乎所有電腦系統都支援基本拉丁字母，並各自支援不同的其他編碼方式。Unicode為了和它們相互相容，其首 256 個字元保留給 ISO 8859-1 所定義的字元，使既有的西歐語系文字的轉換不需特別考量；並且把大量相同的字元重複編到不同的字元碼中去，使得舊有紛雜的編碼方式得以和Unicode編碼間互相直接轉換，而不會遺失任何資訊。舉例來說，<a class="mw-redirect" href="/wiki/%E5%85%A8%E5%BD%A2" title="全形">全形</a>格式區段包含了主要的拉丁字母的全形格式，在中文、日文、以及韓文字形當中，這些字元以全形的方式來呈現，而不以常見的半形形式顯示，這對豎排文字和等寬排列文字有重要作用。
</p>, <p>在表示一個 Unicode 的字元時，通常會用「U+」然後緊接著一組十六進位的數字來表示這一個字元。在<a class="mw-redirect" href="/wiki/%E5%9F%BA%E6%9C%AC%E5%A4%9A%E6%96%87%E7%A8%AE%E5%B9%B3%E9%9D%A2" title="基本多文種平面">基本多文種平面</a>（英語：<span lang="en">Basic Multilingual Plane</span>，簡寫 BMP。又稱為「零號平面」、plane 0）裏的所有字元，要用四個數字（即兩個byte，共16 bits，例如 U+4AE0，共支援六萬多個字元）；在零號平面以外的字元則需要使用五個或六個數字。舊版的 Unicode 標準使用相近的標記方法，但卻有些微小差異：在 Unicode 3.0 裏使用「U-」然後緊接著八個數字，而「U+」則必須隨後緊接著四個數字。
</p>, <p>位於美國加州的Unicode組織允許任何願意支付會費的公司和個人加入，其成員包含了主要的電腦軟硬體廠商，例如<a class="mw-redirect" href="/wiki/Adobe_Systems" title="Adobe Systems">Adobe系統</a>、<a href="/wiki/%E8%98%8B%E6%9E%9C%E5%85%AC%E5%8F%B8" title="蘋果公司">蘋果公司</a>、<a href="/wiki/%E6%83%A0%E6%99%AE" title="惠普">惠普</a>、<a href="/wiki/IBM" title="IBM">IBM</a>、<a class="mw-redirect" href="/wiki/%E5%BE%AE%E8%BB%9F" title="微軟">微軟</a>、<a href="/wiki/%E6%96%BD%E4%B9%90" title="全錄">全錄</a>等。
</p>, <p>20世紀80年代末，組成 Unicode 組織的商業機構，和國際合作的<a href="/wiki/%E5%9C%8B%E9%9A%9B%E6%A8%99%E6%BA%96%E5%8C%96%E7%B5%84%E7%B9%94" title="國際標準化組織">國際標準化組織</a>因為電腦普及和資訊國際化的前提下，分別各自成立了 Unicode 組織<sup class="reference" id="cite_ref-3"><a href="#cite_note-3">[3]</a></sup>和 ISO-10646 工作小組。他們不久便發現對方的存在，大家為著相同的目的而工作。1991 年，Unicode Consortium 與 ISO/IEC JTC1/SC2 同意保持 Unicode 碼表與 ISO 10646 標準保持相容並密切協調各自標準近一步的擴展。雖然實際上兩者的字集編碼相同，但實質上兩者確實為兩個不同的標準。Unicode 1.1 對應於 ISO 10646-1:1993，Unicode 3.0 對應於 ISO 10646-1:2000，Unicode 3.2 對應於 ISO 10646-2:2001，Unicode 4.0 對應於 ISO 10646:2003，Unicode 5.0 對應於 ISO 10646:2003 及附錄 1–3。
</p>, <p>Unicode 自版本 2.0 開始保持了向下相容，即新的版本僅僅增加字元，原有字元不會被刪除或更名。 
</p>, <p>統一碼聯盟在 1991 年首次發布了 <b>The Unicode Standard</b>。Unicode 的開發結合了<a href="/wiki/%E5%9C%8B%E9%9A%9B%E6%A8%99%E6%BA%96%E5%8C%96%E7%B5%84%E7%B9%94" title="國際標準化組織">國際標準化組織</a>所制定的 <a class="mw-redirect" href="/wiki/ISO/IEC_10646" title="ISO/IEC 10646">ISO/IEC 10646</a>，即<a class="new" href="/w/index.php?title=%E9%80%9A%E7%94%A8%E5%AD%97%E5%85%83%E9%9B%86&amp;action=edit&amp;redlink=1" title="通用字元集（頁面不存在）">通用字元集</a>。Unicode 與 ISO/IEC 10646 在編碼的運作原理相同，但 <b>The Unicode Standard</b> 包含了更詳盡的實現資訊、涵蓋了更細節的主題，諸如位元編碼（bitwise encoding）、校對以及呈現等。<b>The Unicode Standard</b> 也列舉了諸多的字元特性，包含了那些必須支援兩種閱讀方向的文字（由左至右或由右至左的文字閱讀方向，例如阿拉伯文是由右至左）。Unicode 與 ISO/IEC 10646 這兩個標準在術語上的使用有些微的不同。
</p>, <p>在 2005 年，Unicode 的第十萬個字元被引入成為標準之一，該字元被用於<a class="mw-redirect" href="/wiki/%E9%A6%AC%E6%8B%89%E9%9B%85%E6%8B%89%E5%A7%86%E8%AA%9E" title="馬拉雅拉姆語">馬拉雅拉姆語</a>。
</p>, <p>截至目前的 Unicode 各版本及其發布時間如下：
</p>, <p>ISO/IEC 10646-2:2001
</p>, <p>ISO/IEC 10646-2:2001
</p>, <p>大概來說，Unicode 編碼系統可分為編碼方式和實現方式兩個層次。
</p>, <p>《The Unicode Standard Version 6.2 – Core Specification》<sup class="reference" id="cite_ref-33"><a href="#cite_note-33">[32]</a></sup> 文件給出了 Unicode 的十大設計原則：
</p>, <p>統一碼的編碼方式與 <a class="mw-redirect" href="/wiki/ISO_10646" title="ISO 10646">ISO 10646</a> 的<a href="/wiki/%E9%80%9A%E7%94%A8%E5%AD%97%E7%AC%A6%E9%9B%86" title="通用字元集">通用字元集</a>概念相對應。目前實際應用的統一碼版本對應於 <a class="mw-redirect" href="/wiki/UCS-2" title="UCS-2">UCS-2</a>，使用 16 <a href="/wiki/%E4%BD%8D%E5%85%83" title="位元">位</a>的編碼空間。也就是每個字元占用 2 個<a href="/wiki/%E5%AD%97%E8%8A%82" title="位元組">位元組</a>。這樣理論上一共最多可以表示 2<sup>16</sup>（即 65536）個字元。基本滿足各種語言的使用。實際上目前版本的統一碼並未完全使用這 16 位編碼，而是保留了大量空間以作為特殊使用或將來擴充。
</p>, <p>上述 16 位統一碼字元構成<a class="mw-redirect" href="/wiki/%E5%9F%BA%E6%9C%AC%E5%A4%9A%E6%96%87%E7%A8%AE%E5%B9%B3%E9%9D%A2" title="基本多文種平面">基本多文種平面</a>。最新（但未實際廣泛使用）的統一碼版本定義了 16 個<a class="mw-redirect" href="/wiki/%E8%BE%85%E5%8A%A9%E5%B9%B3%E9%9D%A2" title="輔助平面">輔助平面</a>，兩者合起來至少需要占據 21 位的編碼空間，比 3 位元組略少。但事實上輔助平面字元仍然占用 4 位元組編碼空間，與 <a class="mw-redirect" href="/wiki/UCS-4" title="UCS-4">UCS-4</a> 保持一致。未來版本會擴充到 ISO 10646-1 實現級別 3，即涵蓋 UCS-4 的所有字元。UCS-4 是一個更大的尚未填充完全的 31 位字元集，加上恆為 0 的首位，共需占據 32 位，即 4 位元組。理論上最多能表示 2<sup>31</sup>個字元，完全可以涵蓋一切語言所用的符號。
</p>, <p>基本多文種平面的字元的編碼為 <i>U+hhhh</i>，其中每個 <i>h</i> 代表一個<a href="/wiki/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6" title="十六進位">十六進位</a>數字，與 UCS-2 編碼完全相同。而其對應的 4 位元組 UCS-4 編碼後兩個位元組一致，前兩個位元組則所有位均為 0。
</p>, <p>關於統一碼和 ISO 10646 及 UCS 的詳細關係，見<a href="/wiki/%E9%80%9A%E7%94%A8%E5%AD%97%E7%AC%A6%E9%9B%86" title="通用字元集">通用字元集</a>。
</p>, <p>Unicode 的實現方式不同於編碼方式。一個字元的 Unicode 編碼是確定的。但是在實際傳輸過程中，由於不同<a href="/wiki/%E7%B3%BB%E7%BB%9F%E5%B9%B3%E5%8F%B0" title="系統平台">系統平台</a>的設計不一定一致，以及出於節省空間的目的，對 Unicode 編碼的實現方式有所不同。Unicode 的實現方式稱為 <b>Unicode轉換格式</b>（Unicode Transformation Format，簡稱為 UTF）。
</p>, <p>例如，如果一個僅包含基本 7 位 <a href="/wiki/ASCII" title="ASCII">ASCII</a> 字元的 Unicode 檔案，如果每個字元都使用 2 位元組的原 Unicode 編碼傳輸，其第一位元組的 8 位始終為 0。這就造成了比較大的浪費。對於這種情況，可以使用 UTF-8 編碼，這是一種變長編碼，它將基本 7 位 ASCII 字元仍用 7 位編碼表示，占用一個位元組（首位補 0）。而遇到與其他 Unicode 字元混合的情況，將按一定演算法轉換，每個字元使用 1-3 個位元組編碼，並利用首位為 0 或 1 進行辨識。這樣對以7位ASCII字元為主的西文文件就大幅節省了編碼長度（具體方案參見 <i><a href="/wiki/UTF-8" title="UTF-8">UTF-8</a></i>）。類似的，對未來會出現的需要 4 個位元組的輔助平面字元和其他 UCS-4 擴充字元，2 位元組編碼的 <a href="/wiki/UTF-16" title="UTF-16">UTF-16</a> 也需要通過一定的演算法進行轉換。
</p>, <p>再如，如果直接使用與 Unicode 編碼一致（僅限於 BMP 字元）的 UTF-16 編碼，由於每個字元占用了兩個位元組，在<a class="mw-redirect" href="/wiki/%E9%BA%A5%E9%87%91%E5%A1%94%E9%9B%BB%E8%85%A6" title="麥金塔電腦">麥金塔電腦</a>（<a class="mw-redirect mw-disambig" href="/wiki/Mac" title="Mac">Mac</a>）機和<a class="mw-redirect" href="/wiki/%E5%80%8B%E4%BA%BA%E9%9B%BB%E8%85%A6" title="個人電腦">個人電腦</a>上，對位元組順序的理解是不一致的。這時同一位元組流可能會被解釋為不同內容，如某字元為十六進位編碼 4E59 ，按兩個位元組拆分為 4E 和 59，在 Mac 上讀取時是從低位元組開始，那麼在 Mac OS 會認為此 4E59 編碼為 594E，找到的字元為「奎」，而在 Windows 上從高位元組開始讀取，則編碼為 U+4E59 的字元為「乙」。就是說在 Windows 下以 UTF-16 編碼儲存一個字元「乙」，在 Mac OS 環境下開啟會顯示成「奎」。此類情況說明 UTF-16 的編碼順序若不加以人為定義就可能發生混淆，於是在 UTF-16 編碼實現方式中使用了<a href="/wiki/%E5%AD%97%E8%8A%82%E5%BA%8F" title="位元組序">大端序</a>（Big-Endian，簡寫為 UTF-16 BE）、<a href="/wiki/%E5%AD%97%E8%8A%82%E5%BA%8F" title="位元組序">小端序</a>（Little-Endian，簡寫為 UTF-16 LE）的概念，以及可附加的<a href="/wiki/%E4%BD%8D%E5%85%83%E7%B5%84%E9%A0%86%E5%BA%8F%E8%A8%98%E8%99%9F" title="位元組順序記號">位元組順序記號</a>解決方案，目前在 PC 機上的 Windows 系統和 Linux 系統對於 UTF-16 編碼預設使用 UTF-16 LE。（具體方案參見<i><a href="/wiki/UTF-16" title="UTF-16">UTF-16</a></i>）
</p>, <p>此外 Unicode 的實現方式還包括 <a href="/wiki/UTF-7" title="UTF-7">UTF-7</a>、<a class="mw-redirect" href="/wiki/Punycode" title="Punycode">Punycode</a>、<a class="new" href="/w/index.php?title=CESU-8&amp;action=edit&amp;redlink=1" title="CESU-8（頁面不存在）">CESU-8</a>、<a class="new" href="/w/index.php?title=SCSU&amp;action=edit&amp;redlink=1" title="SCSU（頁面不存在）">SCSU</a>、<a href="/wiki/UTF-32" title="UTF-32">UTF-32</a>、<a class="mw-redirect" href="/wiki/GB18030" title="GB18030">GB18030</a> 等，這些實現方式有些僅在一定的國家和地區使用，有些則屬於未來的規劃方式。目前通用的實現方式是 UTF-16 小端序（LE）、UTF-16 大端序（BE）和 UTF-8。在微軟公司 <a href="/wiki/Windows_XP" title="Windows XP">Windows XP</a> 附帶的<a class="mw-redirect" href="/wiki/%E8%AE%B0%E4%BA%8B%E6%9C%AC" title="記事本">記事本</a>（Notepad）中，「另存為」對話方塊可以選擇的四種編碼方式除去非 Unicode 編碼的 <a class="mw-redirect" href="/wiki/ANSI" title="ANSI">ANSI</a>（對於英文系統即 <a href="/wiki/ASCII" title="ASCII">ASCII</a> 編碼，中文系統則為 <a class="mw-redirect" href="/wiki/GB2312" title="GB2312">GB2312</a> 或 <a class="mw-redirect" href="/wiki/Big5" title="Big5">Big5</a> 編碼）外，其餘三種為「Unicode」（對應 UTF-16 LE）、「Unicode big endian」（對應 UTF-16 BE）和「UTF-8」。
</p>, <p>目前輔助平面的工作主要集中在第二和第三平面的<a class="mw-redirect" href="/wiki/%E4%B8%AD%E6%97%A5%E9%9F%A9%E7%BB%9F%E4%B8%80%E8%A1%A8%E6%84%8F%E6%96%87%E5%AD%97" title="中日韓統一表意文字">中日韓統一表意文字</a>中，因此包括 <a class="mw-redirect" href="/wiki/GBK" title="GBK">GBK</a>、<a class="mw-redirect" href="/wiki/GB18030" title="GB18030">GB18030</a>、<a class="mw-redirect" href="/wiki/Big5" title="Big5">Big5</a>等<a class="mw-redirect" href="/wiki/%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87" title="簡體中文">簡體中文</a>、<a class="mw-redirect" href="/wiki/%E7%B9%81%E4%BD%93%E4%B8%AD%E6%96%87" title="繁體中文">繁體中文</a>、<a class="mw-redirect" href="/wiki/%E6%97%A5%E6%96%87" title="日文">日文</a>、<a class="mw-redirect" href="/wiki/%E9%9F%A9%E6%96%87" title="韓文">韓文</a>以及越南<a href="/wiki/%E5%96%83%E5%AD%97" title="喃字">喃字</a>的各種編碼與 Unicode 的協調性被重點關注。考慮到 Unicode 最終要涵蓋所有的字元。從某種意義而言，這些編碼方式也可視作 Unicode 的出現於其之前的<b>既成事實</b>的實現方式，如同 <a href="/wiki/ASCII" title="ASCII">ASCII</a> 及其擴充 <a class="mw-redirect" href="/wiki/Latin-1" title="Latin-1">Latin-1</a> 一樣，後兩者的字元在 16 位 Unicode 編碼空間中的編碼第一位元組各位全為 0，第二位元組編碼與原編碼完全一致。但上述東亞語言編碼與 Unicode 編碼的對應關係要複雜得多。
</p>, <p>在非 Unicode 環境下，由於不同國家和地區採用的字元集不一致，很可能出現無法正常顯示所有字元的情況。微軟公司使用了<a href="/wiki/%E4%BB%A3%E7%A0%81%E9%A1%B5" title="頁碼">頁碼</a>（Codepage）轉換表的技術來過渡性的部分解決這一問題，即通過指定的轉換表將非 Unicode 的字元編碼轉換為同一字元對應的系統內部使用的 Unicode 編碼。可以在「語言與區域設定」中選擇一個頁碼作為非 Unicode 編碼所採用的預設編碼方式，如936為簡體中文<a href="/wiki/%E5%9B%BD%E5%AE%B6%E6%A0%87%E5%87%86%E4%BB%A3%E7%A0%81" title="國家標準代碼">GB碼</a>，950為繁體中文<a class="mw-redirect" href="/wiki/Big5" title="Big5">Big5</a>（皆指PC上使用的）。在這種情況下，一些非英語的歐洲語言編寫的軟體和文件很可能出現亂碼。而將頁碼設定為相應語言中文處理又會出現問題，這一情況無法避免。只有完全採用統一編碼才能徹底解決這些問題，但目前尚無法做到這一點。
</p>, <p>頁碼技術現在廣泛為各種平台所採用。UTF-7 的頁碼是 65000，UTF-8 的頁碼是 65001。
</p>, <p><a href="/wiki/XML" title="XML">XML</a> 及其子集 <a href="/wiki/XHTML" title="XHTML">XHTML</a> 採用 <a href="/wiki/UTF-8" title="UTF-8">UTF-8</a> 作為<a class="new" href="/w/index.php?title=%E6%A0%87%E5%87%86%E5%AD%97%E9%9B%86&amp;action=edit&amp;redlink=1" title="標準字集（頁面不存在）">標準字集</a>，理論上我們可以在各種支援 XML 標準的瀏覽器上顯示任何地區文字的網頁，只要電腦本身安裝有合適的字型即可。可以利用<code>&amp;#</code><var>nnn</var><code>;</code>的格式顯示特定的字元。<var>nnn</var> 代表該字元的<a href="/wiki/%E5%8D%81%E8%BF%9B%E5%88%B6" title="十進位">十進位</a> Unicode 代碼。如果採用 <a href="/wiki/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6" title="十六進位">十六進位</a> 代碼，在編碼之前加上<code>x</code>字元即可。但部分舊版本的瀏覽器可能無法辨識十六進位代碼。
</p>, <p>過去電腦編碼的 8 位標準，使每個國家都只按國家使用的字元而編定各自的編碼系統；而對於部份字元系統比較複雜的語言，如<a href="/wiki/%E8%B6%8A%E5%8D%97%E8%AF%AD" title="越南語">越南語</a>，又或者東亞國家的大型字元集，都不能在 8 位的環境下正常顯示。
</p>, <p>只是最近才有在文字中對十六進位的支援，那麼舊版本的瀏覽器顯示那些字元或許可能有問題-大概首先會遇到的一個問題只是在對於大於 8 位 Unicode 字元的顯示。解決這個問題的普遍做法仍然是將其中的十六進位碼轉換成一個十進位碼（例如：<code>♠</code>用<code>&amp;#9824;</code>代替<code>&amp;#x2660;</code>）。
</p>, <p>也有一些字元集標準將一些常用的標誌存放在字元內碼外面，那麼你可能使用象<code>—</code>這樣的文字標誌來表示一個長劃（—）的情況，即使它的字元內碼已經被使用，這些標準也不包含那個字元。
</p>, <p>然而部分由於 Unicode 版本發展原因，很多瀏覽器只能顯示 UCS-2 完整字元集，也即現在使用的 Unicode 版本中的一個小子集。下表可以檢驗您的瀏覽器如何顯示各種 Unicode 代碼：
</p>, <p>一些多語言支援的網頁瀏覽器，比如<a href="/wiki/%E5%BE%AE%E8%BD%AF" title="微軟">微軟</a> <a class="mw-redirect" href="/wiki/Windows" title="Windows">Windows</a> 系統的 <a href="/wiki/Internet_Explorer" title="Internet Explorer">Internet Explorer</a> 5.5 及以上版本，以及跨平台的瀏覽器 <a href="/wiki/Mozilla" title="Mozilla">Mozilla</a>／<a class="mw-redirect" href="/wiki/Netscape" title="Netscape">Netscape</a> 6，可以在安裝時根據需要動態地使用相應的字元集，預先安裝了合適的語言套件，就可以同時顯示頁面上的各種Unicode字元。<a href="/wiki/Internet_Explorer" title="Internet Explorer">Internet Explorer</a> 5.5 還提出用戶可以在需要新字型時，即裝即用。另外的瀏覽器如 <a class="mw-redirect" href="/wiki/Netscape_Navigator" title="Netscape Navigator">Netscape Navigator</a> 4.77，則只能顯示跟頁面編碼相應字元集中的文字。當你使用後一種瀏覽器時，你不大可能預先安裝所有的字型，即使有了字型，瀏覽器也不一定能將這些字型完全應用起來。可能遇到的情況是，這種瀏覽器只能夠顯示部分文字，因為它們是按照標準進行編碼，儘管理論上在相容的系統中，只要有了相應的 <a href="/wiki/Code2000" title="Code2000">Code2000</a> 字型，就可以正確顯示。一種變通的辦法，是將某些少見的字元，通過「名稱實體參照」的方式來使用。
</p>, <p>不同的作業系統，各有直接輸入 Unicode 字元的方法：
</p>, <p>在 <a href="/wiki/SGML" title="SGML">SGML</a>、<a href="/wiki/HTML" title="HTML">HTML</a>、<a href="/wiki/XML" title="XML">XML</a> 的文字中，使用<a href="/wiki/%E5%AD%97%E7%AC%A6%E5%80%BC%E5%BC%95%E7%94%A8" title="字元值參照">字元值參照</a>或<a href="/wiki/XML%E4%B8%8EHTML%E5%AD%97%E7%AC%A6%E5%AE%9E%E4%BD%93%E5%BC%95%E7%94%A8%E5%88%97%E8%A1%A8" title="XML與HTML字元實體參照列表">字元實體參照</a>表示一個 Unicode 字元。
</p>, <p>截至 2011 年 10 月，可以使用<a class="mw-redirect" href="/wiki/%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3" title="微軟拼音">微軟拼音</a> 2003 或 2007 版本，<a href="/wiki/%E5%80%89%E9%A0%A1%E8%BC%B8%E5%85%A5%E6%B3%95" title="倉頡輸入法">倉頡輸入法</a>第三代第五代第六代版本，<a href="/wiki/%E9%83%91%E7%A0%81" title="鄭碼">鄭碼</a>Unicode版本，<a class="new" href="/w/index.php?title=%E6%B5%B7%E5%B3%B0%E4%BA%94%E7%AD%86&amp;action=edit&amp;redlink=1" title="海峰五筆（頁面不存在）">海峰五筆</a>9.3版本，新<a href="/wiki/%E6%B3%A8%E9%9F%B3%E8%BC%B8%E5%85%A5%E6%B3%95" title="注音輸入法">注音輸入法</a>和 <a href="/wiki/VimIM" title="VimIM">VimIM</a> 進行輸入。
</p>, <p>使用 Microsoft IME 2007，可以在IME PAD裡找到Unicode的點擊表。點擊字元即可輸入。選擇字型可以預覽字元效果。
</p>, <p>除了輸入法外，<a href="/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" title="作業系統">作業系統</a>也會提供另外幾種方法輸入Unicode。像是 <a href="/wiki/Windows_2000" title="Windows 2000">Windows 2000</a> 之後的 Windows 系統就提供一個可點擊的<a href="/wiki/%E5%AD%97%E7%AC%A6%E6%98%A0%E5%B0%84%E8%A1%A8" title="字元對映表">字元對映表</a>。又或者在 <a href="/wiki/Microsoft_Word" title="Microsoft Word">Microsoft Word</a> 下，按下 Alt 鍵不放，輸入 0 和某個字元的 Unicode 編碼（<a href="/wiki/%E5%8D%81%E8%BF%9B%E5%88%B6" title="十進位">十進位</a>），再鬆開 Alt 鍵即可得到該字元，如<code>Alt + 033865</code>會得到 Unicode 字元<i>葉</i>。另外按<code>Alt + X</code>組合鍵，MS Word 也會將游標前面的字元同其<a href="/wiki/%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6" title="十六進位">十六進位</a>的四位 Unicode 編碼進行互相轉換。
</p>]