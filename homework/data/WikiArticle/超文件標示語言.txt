[<p><b>超文本標記語言</b>（英語：<span lang="en"><b>H</b>yper<b>T</b>ext <b>M</b>arkup <b>L</b>anguage</span>，簡稱：<b>HTML</b>）是一種用於建立<a class="mw-redirect" href="/wiki/%E7%BD%91%E9%A1%B5" title="網頁">網頁</a>的標準<a class="mw-redirect" href="/wiki/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80" title="標記語言">標記語言</a>。HTML是一種基礎技術，常與<a class="mw-redirect" href="/wiki/CSS" title="CSS">CSS</a>、<a href="/wiki/JavaScript" title="JavaScript">JavaScript</a>一起被眾多網站用於設計網頁、網頁應用程式以及行動應用程式的使用者介面<sup class="reference" id="cite_ref-3"><a href="#cite_note-3">[3]</a></sup>。<a href="/wiki/%E7%BD%91%E9%A1%B5%E6%B5%8F%E8%A7%88%E5%99%A8" title="網頁瀏覽器">網頁瀏覽器</a>可以讀取HTML檔案，並將其彩現成視覺化網頁。HTML描述了一個網站的結構語意隨著線索的呈現，使之成為一種標記語言而非<a href="/wiki/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80" title="程式語言">程式語言</a>。
</p>, <p><a href="/wiki/HTML%E5%85%83%E7%B4%A0" title="HTML元素">HTML元素</a>是構建網站的基石。HTML允許嵌入圖像與物件，並且可以用於建立互動式表單，它被用來結構化資訊——例如標題、段落和列表等等，也可用來在一定程度上描述文件的外觀和<a class="mw-redirect" href="/wiki/%E8%AF%AD%E4%B9%89" title="語意">語意</a>。HTML的語言形式為<a href="/wiki/%E6%8B%AC%E5%8F%B7" title="括號">尖括號</a>包圍的HTML元素（如<code style="white-space:nowrap;">&lt;html&gt;</code>），瀏覽器使用HTML標籤和指令碼來詮釋網頁內容，但不會將它們顯示在頁面上。
</p>, <p>HTML可以嵌入如<a href="/wiki/JavaScript" title="JavaScript">JavaScript</a>的<a href="/wiki/%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80" title="手稿語言">手稿語言</a>，它們會影響HTML網頁的行為。網頁瀏覽器也可以參照<a href="/wiki/%E5%B1%82%E5%8F%A0%E6%A0%B7%E5%BC%8F%E8%A1%A8" title="階層式樣式表">階層式樣式表</a>（CSS）來定義文字和其它元素的外觀與布局。維護HTML和CSS標準的組織<a href="/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91%E8%81%94%E7%9B%9F" title="全球資訊網協會">全球資訊網協會</a>（W3C）鼓勵人們使用CSS替代一些用於表現的HTML元素<sup class="reference" id="cite_ref-deprecated_4-0"><a href="#cite_note-deprecated-4">[4]</a></sup>。
</p>, <p>1980年，物理學家<a href="/wiki/%E8%92%82%E5%A7%86%C2%B7%E4%BC%AF%E7%BA%B3%E6%96%AF-%E6%9D%8E" title="提姆·柏內茲-李">提姆·柏內茲-李</a>在<a href="/wiki/%E6%AD%90%E6%B4%B2%E6%A0%B8%E5%AD%90%E7%A0%94%E7%A9%B6%E7%B5%84%E7%B9%94" title="歐洲核子研究組織">歐洲核子研究中心</a>（CERN）在承包工程期間，為使CERN的研究人員使用並共享文件，他提出並建立原型系統<a href="/wiki/ENQUIRE" title="ENQUIRE">ENQUIRE</a>。1989年，柏內茲-李在一份備忘錄中提出一個基於<a href="/wiki/%E4%BA%92%E8%81%94%E7%BD%91" title="網際網路">網際網路</a>的<a href="/wiki/%E8%B6%85%E6%96%87%E6%9C%AC" title="超文字">超文字</a>系統<sup class="reference" id="cite_ref-5"><a href="#cite_note-5">[5]</a></sup>。他制定HTML並在1990年底寫出瀏覽器和伺服器軟體。同年，柏內茲-李與CERN的資料系統工程師<a href="/wiki/%E7%BD%97%E4%BC%AF%E7%89%B9%C2%B7%E5%8D%A1%E9%87%8C%E5%A5%A5" title="羅伯特·卡里奧">羅伯特·卡里奧</a>聯合為專案申請資助，但未被CERN正式批准。在他的個人筆記中<sup class="reference" id="cite_ref-6"><a href="#cite_note-6">[6]</a></sup>柏內茲-李列舉「一些使用超文字的領域」，並把百科全書列為第一項<sup class="reference" id="cite_ref-7"><a href="#cite_note-7">[7]</a></sup>。
</p>, <p>HTML的首次公開描述出現於一個名為<a class="external text" href="http://info.cern.ch/hypertext/WWW/MarkUp/Tags.html" rel="nofollow">HTML Tags</a>的檔案中，由提姆·柏內茲-李於1991年底提及<sup class="reference" id="cite_ref-tagshtml_8-0"><a href="#cite_note-tagshtml-8">[8]</a></sup><sup class="reference" id="cite_ref-9"><a href="#cite_note-9">[9]</a></sup>。它描述18個元素，包括HTML初始的、相對簡單的設計。除了超連結標籤外，其他設計都深受CERN內部一個以<a href="/wiki/SGML" title="SGML">標準通用標記語言</a>（SGML）為基礎的檔案格式SGMLguid的影響。這些元素仍有11個存在於HTML 4中<sup class="reference" id="cite_ref-10"><a href="#cite_note-10">[10]</a></sup>。
</p>, <p>柏內茲-李認為HTML是SGML的一個應用程式。1993年中期<a href="/wiki/%E4%BA%92%E8%81%94%E7%BD%91%E5%B7%A5%E7%A8%8B%E4%BB%BB%E5%8A%A1%E7%BB%84" title="網際網路工程任務組">網際網路工程任務組</a>（IETF）發布首個HTML規範的提案：<a class="external text" href="http://www.w3.org/MarkUp/draft-ietf-iiir-html-01.txt" rel="nofollow">「超文本標記語言（HTML）」網際網路草案</a>，由柏內茲-李與<span class="ilh-all" data-foreign-title="Dan Connolly (computer scientist)" data-lang-code="en" data-lang-name="英語" data-orig-title="丹·康纳利"><span class="ilh-page"><a class="new" href="/w/index.php?title=%E4%B8%B9%C2%B7%E5%BA%B7%E7%BA%B3%E5%88%A9&amp;action=edit&amp;redlink=1" title="丹·康納利（頁面不存在）">丹·康納利</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/Dan_Connolly_(computer_scientist)" title="en:Dan Connolly (computer scientist)"><span dir="auto" lang="en">Dan Connolly (computer scientist)</span></a></span>）</span></span>撰寫。其中包括一個SGML<a class="mw-redirect" href="/wiki/%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E6%8F%8F%E8%BF%B0" title="檔案類型描述">文件類型定義</a>來定義語法<sup class="reference" id="cite_ref-11"><a href="#cite_note-11">[11]</a></sup>。草案於6個月後過期，不過值得注意的是其對<a class="mw-redirect" href="/wiki/NCSA_Mosaic" title="NCSA Mosaic">NCSA Mosaic</a>瀏覽器嵌入線上圖像的自訂標籤的認可，這反映IETF把標準立足於成功原型的理念<sup class="reference" id="cite_ref-raymond_12-0"><a href="#cite_note-raymond-12">[12]</a></sup>。同樣，<span class="ilh-all" data-foreign-title="Dave Raggett" data-lang-code="en" data-lang-name="英語" data-orig-title="戴夫·拉格特"><span class="ilh-page"><a class="new" href="/w/index.php?title=%E6%88%B4%E5%A4%AB%C2%B7%E6%8B%89%E6%A0%BC%E7%89%B9&amp;action=edit&amp;redlink=1" title="戴夫·拉格特（頁面不存在）">戴夫·拉格特</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/Dave_Raggett" title="en:Dave Raggett"><span dir="auto" lang="en">Dave Raggett</span></a></span>）</span></span>在1993年末提出的與之競爭的網際網路草案「HTML+（超文字標記格式）」建議規範已經實現的功能，如表格與填寫表單<sup class="reference" id="cite_ref-html+_13-0"><a href="#cite_note-html+-13">[13]</a></sup>。
</p>, <p>在HTML和HTML+的草案於1994年初到期後，IETF建立一個HTML工作群組，並在1995年完成"HTML 2.0"，這是第一個旨在成為對其後續實現標準的依據的HTML規範<sup class="reference" id="cite_ref-14"><a href="#cite_note-14">[14]</a></sup>。
</p>, <p>在IETF的主導下，HTML標準的進一步發展因競爭利益而遭受停滯。自1996年起，HTML規範一直由<a href="/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91%E8%81%94%E7%9B%9F" title="全球資訊網協會">全球資訊網協會</a>（W3C）維護，並由商業軟體廠商出資<sup class="reference" id="cite_ref-raggett_15-0"><a href="#cite_note-raggett-15">[15]</a></sup>。不過在2000年，HTML也成為國際標準（<a href="/wiki/%E5%9C%8B%E9%9A%9B%E6%A8%99%E6%BA%96%E5%8C%96%E7%B5%84%E7%B9%94" title="國際標準化組織">ISO</a>/ <a class="mw-redirect" href="/wiki/IEC" title="IEC">IEC</a>15445：2000）。HTML 4.01於1999年末發布，進一步的勘誤版本於2001年發布。2004年，<a class="mw-redirect" href="/wiki/%E7%B6%B2%E9%A0%81%E8%B6%85%E6%96%87%E6%9C%AC%E6%8A%80%E8%A1%93%E5%B7%A5%E4%BD%9C%E5%B0%8F%E7%B5%84" title="網頁超文字技術工作小組">網頁超文字應用技術工作小組</a>（WHATWG）開始開發HTML5，並在2008年與W3C共同提出，2014年10月28日完成標準化<sup class="reference" id="cite_ref-16"><a href="#cite_note-16">[16]</a></sup>。
</p>, <p>XHTML是使用<a href="/wiki/XML" title="XML">XML</a> 1.0覆寫自HTML 4.01的獨立語言。它不再被作為單獨標準開發。
</p>, <p>HTML標記包含標籤（及其屬性）、基於字元的資料類型、字元參照和實體參照等幾個關鍵部分。HTML標籤是最常見的，通常成對出現，比如<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span></code>與<code class="mw-highlight" dir="ltr"><span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span></code>。這些成對出現的標籤中，第一個標籤是開始標籤，第二個標籤是結束標籤。兩個標籤之間為元素的內容，有些標籤沒有內容，為空元素，如<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">img</span><span class="p">&gt;</span></code>。
</p>, <p>HTML另一個重要組成部分為<span class="ilh-all" data-foreign-title="document type declaration" data-lang-code="en" data-lang-name="英語" data-orig-title="文档类型声明"><span class="ilh-page"><a class="new" href="/w/index.php?title=%E6%96%87%E6%A1%A3%E7%B1%BB%E5%9E%8B%E5%A3%B0%E6%98%8E&amp;action=edit&amp;redlink=1" title="文件類型聲明（頁面不存在）">文件類型聲明</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/document_type_declaration" title="en:document type declaration"><span dir="auto" lang="en">document type declaration</span></a></span>）</span></span>，這會觸發<a href="/wiki/%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F" title="怪異模式">標準模式</a>彩現。
</p>, <p>以下是一個經典的<a href="/wiki/Hello_World" title="Hello World">Hello World</a>程式的例子：
</p>, <p><code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span></code>和<code class="mw-highlight" dir="ltr"><span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span></code>之間的文字描述網頁，<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span></code>和<code class="mw-highlight" dir="ltr"><span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span></code>之間的文字為可視頁面內容。標記文字<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>This is a title<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span></code>定義了瀏覽器的頁面標題。
</p>, <p>文件標記類型<code class="mw-highlight" dir="ltr"><span class="cp">&lt;!DOCTYPE html&gt;</span></code>用於HTML5。 如果未進行聲明，瀏覽器會使用「<a href="/wiki/%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F" title="怪異模式">怪異模式</a>」進行彩現。<sup class="reference" id="cite_ref-hsivonen_55-0"><a href="#cite_note-hsivonen-55">[55]</a></sup>
</p>, <p>HTML文件由巢狀的HTML元素構成。它們用HTML標籤表示，包含於尖括號中，如<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span></code><sup class="reference" id="cite_ref-56"><a href="#cite_note-56">[56]</a></sup>
</p>, <p>在一般情況下，一個元素由一對標籤表示：「開始標籤」<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span></code>與「結束標籤」<code class="mw-highlight" dir="ltr"><span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span></code>。元素如果含有文字內容，就被放置在這些標籤之間。
</p>, <p>在開始與結束標籤之間也可以封裝另外的標籤，包括標籤與文字的混合。這些巢狀元素是父元素的子元素。
</p>, <p>開始標籤也可包含標籤屬性。這些屬性有諸如標識文件區段、將樣式資訊繫結到文件演示和為一些如<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">img</span><span class="p">&gt;</span></code>等的標籤嵌入圖像、參照圖像來源等作用。
</p>, <p>一些元素如<a href="/wiki/%E6%8F%9B%E8%A1%8C" title="換行">換行</a>符<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">br</span><span class="p">&gt;</span></code>，不允許嵌入任何內容，無論是文字或其他標籤。這些元素只需一個單一的空標籤（類似於一個開始標籤），無需結束標籤。
</p>, <p>許多標籤是可選的，尤其是那些很常用的段落元素<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span></code>的閉合端標籤。HTML瀏覽器或其他媒介可以從上下文辨識出元素的閉合端以及由HTML標準所定義的結構規則。這些規則非常複雜，不是大多數HTML編碼人員可以完全理解的。
</p>, <p>因此，一個HTML元素的一般形式為：<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">tag</span> <span class="na">attribute1</span><span class="o">=</span><span class="s">"value1"</span> <span class="na">attribute2</span><span class="o">=</span><span class="s">"value2"</span><span class="p">&gt;</span>''content''<span class="p">&lt;/</span><span class="nt">tag</span><span class="p">&gt;</span></code>。一些HTML元素被定義為空元素，其形式為<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">tag</span> <span class="na">attribute1</span><span class="o">=</span><span class="s">"value1"</span> <span class="na">attribute2</span><span class="o">=</span><span class="s">"value2"</span><span class="p">&gt;</span></code>。空元素不能封裝任何內容。例如<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">br</span><span class="p">&gt;</span></code>標籤或行內標籤<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">img</span><span class="p">&gt;</span></code>。一個HTML元素的名稱即為標籤使用的名稱。注意，結束標籤的名稱前面有一個斜槓「/」，空元素不需要也不允許結束標籤。如果元素屬性未標明，則使用其預設值。
</p>, <p>HTML文件的頁首：<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>...<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span></code>。標題被包含在頭部，例如：
</p>, <p>標題：HTML標題由<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span></code>到<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">h6</span><span class="p">&gt;</span></code>六個標籤構成，字型由大到小遞減：
</p>, <p>
段落：</p>, <p>換行：<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">br</span><span class="p">&gt;</span></code>。<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">br</span><span class="p">&gt;</span></code>與<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span></code>之間的差異是<code>br</code>換行但不改變頁面的語意結構，而<code>p</code>部分的頁面成段。
</p>, <p>連結：使用<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">a</span><span class="p">&gt;</span></code>標籤來建立連結。<code>href</code>屬性包含連結的URL位址。
</p>, <p>注釋：
</p>, <p> 注釋有助於理解標記，但它不會在網頁上顯示。
</p>, <p>HTML中存在以下幾種類型的標記元素：
</p>, <p>大多數元素的屬性以「名稱-值」的形式成對出現，由「=」分離並寫在開始標籤元素名之後。值一般由單引號或雙引號包圍，有些值的內容包含特定字元，在HTML中可以去掉引號（XHTML不行）<sup class="reference" id="cite_ref-58"><a href="#cite_note-58">[58]</a></sup><sup class="reference" id="cite_ref-59"><a href="#cite_note-59">[59]</a></sup>。不加引號的屬性值被認為是不安全的<sup class="reference" id="cite_ref-60"><a href="#cite_note-60">[60]</a></sup>。有些屬性無需成對出現，僅存在於開始標籤中即可影響元素<sup class="reference" id="cite_ref-tagshtml_8-2"><a href="#cite_note-tagshtml-8">[8]</a></sup>，如<code>img</code> 元素的<code>ismap</code> 屬性<sup class="reference" id="cite_ref-61"><a href="#cite_note-61">[61]</a></sup>。
</p>, <p>許多元素存在一些共通的屬性：
</p>, <p>縮寫元素<code>abbr</code>可用於說明一些屬性：
</p>, <p>這個例子顯示為<abbr class="jargon" id="anId" style="color:purple;" title="超文本標記語言">HTML</abbr>； 在大多數瀏覽器中，游標指向縮寫時會顯示標題文字「超文本標記語言」。
</p>, <p>大多數元素採用與語言相關的屬性<code>dir</code> 來指定文字方向，如 "rtl"採用從右到左的文字，比如<a href="/wiki/%E9%98%BF%E6%8B%89%E4%BC%AF%E8%AF%AD" title="阿拉伯語">阿拉伯語</a>、<a href="/wiki/%E6%B3%A2%E6%96%AF%E8%AF%AD" title="波斯語">波斯語</a>以及<a href="/wiki/%E5%B8%8C%E4%BC%AF%E6%9D%A5%E8%AF%AD" title="希伯來語">希伯來語</a><sup class="reference" id="cite_ref-62"><a href="#cite_note-62">[62]</a></sup>。
</p>, <p>在4.0版本中，HTML定義了一系列共252個字元實體參照和1,114,050個<a class="mw-redirect" href="/wiki/%E5%AD%97%E5%85%83%E5%80%BC%E5%8F%83%E8%80%83" title="字元值參考">字元值參考</a>。二者都支援單個字元透過簡單的標記寫入。文字字元與其對應的標記彩現的效果相同。
</p>, <p>用這種方式「跳脫」字元的能力允許字元<code>&lt;</code>與<code>&amp;</code>（當分別被寫作<code>&amp;lt;</code>和<code>&amp;amp;</code>時）被理解為字元資料而不是標記。例如<code>&lt;</code>通常為標籤的開頭，<code>&amp;</code>通常為字元實體參照與數字字元參照的開頭；<code>&amp;amp;</code>或<code>&amp;#x26;</code>或<code>&amp;#38;</code>將<code>&amp;</code>作為元素的內容或屬性的值。雙引號字元<code>"</code>在不被用於屬性值的標示時必須跳脫為<code>&amp;quot;</code>或<code>&amp;#x22;</code>或<code>&amp;#34;</code>；相等地，當於單引號字元<code>'</code>不被用於屬性值的標示時，也必須跳脫為<code>&amp;#x27;</code>或<code>&amp;#39;</code>（或HTML5與XHTML文件中的<code>&amp;apos;</code><sup class="reference" id="cite_ref-63"><a href="#cite_note-63">[63]</a></sup><sup class="reference" id="cite_ref-aposhtml_64-0"><a href="#cite_note-aposhtml-64">[64]</a></sup>）。
</p>, <p>如果文件作者忽略了跳脫這樣的字元，一些瀏覽器會嘗試透過上下文猜測他們的意圖。如果結果仍為無效標記，這會使其他瀏覽器或<a href="/wiki/%E7%94%A8%E6%88%B7%E4%BB%A3%E7%90%86" title="用戶代理">用戶代理</a>難以存取到該文件，並使它們嘗試使用<a class="mw-redirect" href="/wiki/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB" title="網路爬蟲">搜尋和索引</a>來解析該文件。
</p>, <p>那些難以輸入或不在該文件<a href="/wiki/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81" title="字元編碼">字元編碼</a>中的字元也可透過跳脫來實現。例如通常只在西歐或南美的鍵盤出現的重音符<code>e</code>（<code>é</code>），可以在HTML文件中用作實體參照<code>&amp;eacute;</code> 或數字參照<code>&amp;#xE9;</code>或<code>&amp;#233;</code>。 諸如<a href="/wiki/UTF-8" title="UTF-8">UTF-8</a>的<a href="/wiki/Unicode" title="Unicode">Unicode</a>字元編碼與所有的現代瀏覽器相容並允許直接存取全球書寫系統幾乎所有的字元 <sup class="reference" id="cite_ref-65"><a href="#cite_note-65">[65]</a></sup>。
</p>, <p>HTML為元素內容定義了多種<a class="mw-redirect" href="/wiki/%E6%95%B8%E6%93%9A%E9%A1%9E%E5%9E%8B" title="資料類型">資料類型</a>，如指令碼資料、樣式表資料以及許多屬性值的類型，包括ID、名稱、URI、數字長度單位、語言、媒體描述符顏色、字元編碼、日期和時間等等。所有這些資料類型都是字元資料的特殊化。
</p>, <p>HTML文件需要以<span class="ilh-all" data-foreign-title="document type declaration" data-lang-code="en" data-lang-name="英語" data-orig-title="文档类型声明"><span class="ilh-page"><a class="new" href="/w/index.php?title=%E6%96%87%E6%A1%A3%E7%B1%BB%E5%9E%8B%E5%A3%B0%E6%98%8E&amp;action=edit&amp;redlink=1" title="文件類型聲明（頁面不存在）">文件類型聲明</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/document_type_declaration" title="en:document type declaration"><span dir="auto" lang="en">document type declaration</span></a></span>）</span></span>（英語非正式說法「doctype」）開頭。在瀏覽器中，文件類型聲明有助於確定彩現模式——特別是是否使用<a href="/wiki/%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F" title="怪異模式">怪異模式</a>。
</p>, <p>文件類型聲明的初衷是透過基於<a href="/wiki/%E6%96%87%E6%A1%A3%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89" title="文件類型定義">文件類型定義</a>（DTD）的SGML工具來解析並驗證HTML文件。
</p>, <p><a href="/wiki/HTML5" title="HTML5">HTML5</a>未定義DTD，所以在HTML5中文件類型聲明更為簡短：<sup class="reference" id="cite_ref-66"><a href="#cite_note-66">[66]</a></sup>
</p>, <p>HTML 4文件類型聲明舉例：
</p>, <p>該聲明參照HTML 4.01「嚴格」版的DTD。基於SGML的驗證器可讀取DTD，正確解析這些文件並執行驗證。在現代瀏覽器中，一個有效的文件類型啟用標準模式有別於<a href="/wiki/%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F" title="怪異模式">怪異模式</a>。
</p>, <p>另外，HTML 4.01提供過渡型與框架集型的DTD。過渡型涵蓋最廣，它可整合目前以及老舊或「過時」的標籤，而嚴格型DTD排除了過時的標籤。框架集擁有所有構建框架所需的標籤以及過渡型的標籤。<sup class="reference" id="cite_ref-67"><a href="#cite_note-67">[67]</a></sup>
</p>, <p>語意化HTML是一種編寫HTML的方式，它強調編碼資訊的含義在其格式（樣子）之上。HTML從創立之初就包括語意化標記<sup class="reference" id="cite_ref-68"><a href="#cite_note-68">[68]</a></sup>，但也包括標識性標記如<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">font</span><span class="p">&gt;</span></code>、<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">i</span><span class="p">&gt;</span></code>和<code class="mw-highlight" dir="ltr"><span class="p">&lt;</span><span class="nt">center</span><span class="p">&gt;</span></code>標籤。也存在一些語意上中立的<a class="mw-redirect" href="/wiki/Span_and_div" title="Span and div">span與div</a>標籤。自1990年代末<a href="/wiki/%E5%B1%82%E5%8F%A0%E6%A0%B7%E5%BC%8F%E8%A1%A8" title="階層式樣式表">CSS</a>開始應用於大多數瀏覽器，網頁製作者就被鼓勵使用CSS以便<a href="/wiki/%E5%91%88%E7%8E%B0%E4%B8%8E%E5%86%85%E5%AE%B9%E5%88%86%E7%A6%BB" title="呈現與內容分離">呈現與內容分離</a><sup class="reference" id="cite_ref-69"><a href="#cite_note-69">[69]</a></sup>。
</p>, <p>在2001年一次對<a href="/wiki/%E8%AF%AD%E4%B9%89%E7%BD%91" title="語意網">語意網</a>的討論中，<a href="/wiki/%E8%92%82%E5%A7%86%C2%B7%E4%BC%AF%E7%BA%B3%E6%96%AF-%E6%9D%8E" title="提姆·柏內茲-李">提姆·柏內茲-李</a>等人給出了一種的方法，使智慧型軟體「代理人」可能有一天會自動抓取網頁進行尋找、過濾並將之前不相關的聯絡起來<sup class="reference" id="cite_ref-70"><a href="#cite_note-70">[70]</a></sup>。這種代理甚至在現在也不普遍，但一些<a href="/wiki/Web_2.0" title="Web 2.0">Web 2.0</a>、<a href="/wiki/%E6%B7%B7%E6%90%AD_(%E4%BA%92%E8%81%AF%E7%B6%B2)" title="混搭 (網際網路)">混搭</a>和<a href="/wiki/%E6%A0%BC%E5%83%B9" title="格價">價格比較網站</a>的想法可能會結束。這些網頁應用程式的混合與柏內茲-李的語意代理人的之間主要區別基於以下事實：目前的<a href="/wiki/%E8%81%9A%E5%90%88%E5%99%A8" title="聚合器">聚合</a>與資訊混合通常由<a href="/wiki/%E7%B6%B2%E9%A0%81%E9%96%8B%E7%99%BC%E8%80%85" title="網頁開發者">網頁開發者</a>設計，他們早已知道網路位置和他們希望混搭、比較與結合的特定資料的<a class="mw-redirect" href="/wiki/API" title="API">API</a>語意。
</p>, <p>網頁代理的一個重要類型是<a class="mw-redirect" href="/wiki/%E7%B6%B2%E8%B7%AF%E8%9C%98%E8%9B%9B" title="網路蜘蛛">網路爬蟲</a>或搜尋引擎蜘蛛。這些軟體代理依賴於它們發現的網頁的語意解析度，因為它們一天要使用各種技術與<a href="/wiki/%E7%AE%97%E6%B3%95" title="演算法">演算法</a>來讀取和索引數百萬個網頁並給網頁用戶提供<a href="/wiki/%E7%BD%91%E7%BB%9C%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E" title="網路搜尋引擎">搜尋工具</a>，沒有這些全球資訊網的有效性就會大大降低。
</p>, <p>為使搜尋引擎蜘蛛評估它們在HTML文件中發現的文字片段的重要性，也為那些建立標記等混合的人與更多的自動化代理工具，HTML中的語意結構需要廣泛一致地應用從而將文字的含義呈現給瀏覽者。<sup class="reference" id="cite_ref-Semantic_Web_Revisted_71-0"><a href="#cite_note-Semantic_Web_Revisted-71">[71]</a></sup>
</p>, <p>表示性標記在目前的HTML和XHTML推薦中不被鼓勵使用。舊版本HTML中的大多數表示功能不再被允許使用，因為它們導致可存取性變差、站點維護成本變高和文件大小變大。<sup class="reference" id="cite_ref-72"><a href="#cite_note-72">[72]</a></sup>
</p>, <p>好的語意化HTML也改善了網頁文件的可存取性（參見<span class="ilh-all" data-foreign-title="Web Content Accessibility Guidelines" data-lang-code="en" data-lang-name="英語" data-orig-title="网页内容无障碍指南"><span class="ilh-page"><a class="new" href="/w/index.php?title=%E7%BD%91%E9%A1%B5%E5%86%85%E5%AE%B9%E6%97%A0%E9%9A%9C%E7%A2%8D%E6%8C%87%E5%8D%97&amp;action=edit&amp;redlink=1" title="網頁內容無障礙指南（頁面不存在）">網頁內容無障礙指南</a></span><span class="noprint ilh-comment">（<span class="ilh-lang">英語</span><span class="ilh-colon">：</span><span class="ilh-link"><a class="extiw" href="https://en.wikipedia.org/wiki/Web_Content_Accessibility_Guidelines" title="en:Web Content Accessibility Guidelines"><span dir="auto" lang="en">Web Content Accessibility Guidelines</span></a></span>）</span></span>）。例如，當螢幕閱讀器或音訊瀏覽器可以正確判定一個文件的結構時，視覺障礙用戶不會再因閱讀重複或無關的資訊而浪費時間。
</p>, <p>HTML文件分發的方法和其他電腦檔案相同。不過，它們最常透過<a href="/wiki/%E7%B6%B2%E9%A0%81%E4%BC%BA%E6%9C%8D%E5%99%A8" title="網頁伺服器">網頁伺服器</a>的<a href="/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE" title="超文字傳輸協定">超文字傳輸協定</a>或<a href="/wiki/%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6" title="電子郵件">電子郵件</a>傳輸。
</p>, <p><a href="/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91" title="全球資訊網">全球資訊網</a>主要由從伺服器透過<a class="mw-redirect" href="/wiki/HTTP" title="HTTP">HTTP</a>協定向瀏覽器傳送的HTML文件組成。但是，HTTP也可以被用於傳輸HTML之外的資料，例如圖像、聲音和其他內容。為使瀏覽器了解如何處理接收到的文件，在傳輸文件時必須同時傳遞<a class="mw-redirect" href="/wiki/%E6%96%87%E4%BB%B6%E9%A1%9E%E5%9E%8B" title="檔案類型">檔案類型</a>。這種<a href="/wiki/%E5%85%83%E6%95%B0%E6%8D%AE" title="元資料">元資料</a>包含<a class="mw-redirect" href="/wiki/MIME" title="MIME">MIME</a>類型（對於HTML 4.01或更早版本是<tt>text/html</tt>，而對於XHTML 1.0或之後的版本是<tt>application/xhtml+xml</tt>），以及字元編碼（參見<a href="/wiki/HTML%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81" title="HTML字元編碼">HTML字元編碼</a>方式）。
</p>, <p>在現在的瀏覽器中，和HTML文件一起傳送的MIME類型影響文件的解讀方式。和XHTML MIME類型一起傳送的文件被認為是良構的<a href="/wiki/XML" title="XML">XML</a>，而<a href="/wiki/%E8%AF%AD%E6%B3%95%E9%94%99%E8%AF%AF" title="語法錯誤">語法錯誤</a>會導致瀏覽器無法呈現文件。完全相同的文件如果和HTML MIME類型一起傳送，則可能被正常顯示，因為瀏覽器對HTML的語法檢查更加鬆懈些。
</p>, <p>W3C的推薦指出，遵循規定的推薦指引的XHTML 1.0文件可標記二者任一的MIME類型<sup class="reference" id="cite_ref-73"><a href="#cite_note-73">[73]</a></sup>。XHTML 1.1還指出，XHTML 1.1文件應<sup class="reference" id="cite_ref-74"><a href="#cite_note-74">[74]</a></sup>標有兩種MIME類型<sup class="reference" id="cite_ref-75"><a href="#cite_note-75">[75]</a></sup>。
</p>, <p>大多數圖形電子郵件客戶端允許使用HTML的子集（經常界限不清）提供格式化和無法使用<a class="mw-redirect" href="/wiki/%E7%BA%AF%E6%96%87%E6%9C%AC" title="純文字">純文字</a>的<a href="/wiki/%E8%AF%AD%E4%B9%89%E7%BD%91" title="語意網">語意</a>標記。這可能包括印刷資訊，如彩色標題、強調和參照文字、內嵌圖片和圖表等。許多這樣的客戶包含一個編寫HTML電子郵件訊息的<a href="/wiki/%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2" title="圖形化使用者介面">圖形化使用者介面</a>編輯器和一個用於顯示的彩現引擎。在郵件中使用HTML受到了一些相容性的批評，由於一些盲人或具有視覺障礙的人的存取問題，這種方式有利於偽裝的<a href="/wiki/%E9%92%93%E9%B1%BC%E5%BC%8F%E6%94%BB%E5%87%BB" title="釣魚式攻擊">釣魚攻擊</a>。因其訊息大小超過明文，所以它可混淆<a href="/wiki/%E5%9E%83%E5%9C%BE%E9%9B%BB%E9%83%B5" title="垃圾電子郵件">垃圾郵件</a>過濾器。
</p>, <p>最常用的電腦<a href="/wiki/%E6%96%87%E4%BB%B6%E6%89%A9%E5%B1%95%E5%90%8D" title="副檔名">副檔名</a>為<tt>.html</tt>，通用縮寫為<tt>.htm</tt>。它起源於某些早期作業系統與檔案系統，如<a href="/wiki/DOS" title="DOS">DOS</a>以及<a href="/wiki/FAT" title="FAT">FAT</a>資料結構的局限性，它將副檔名限制為<a class="mw-redirect" href="/wiki/8.3" title="8.3">3個字母</a><sup class="reference" id="cite_ref-76"><a href="#cite_note-76">[76]</a></sup>。
</p>, <p>HTML應用程式（HTA；副檔名".hta"）是一個<a href="/wiki/Microsoft_Windows" title="Microsoft Windows">Microsoft Windows</a>應用程式，它在瀏覽器中使用HTML和動態HTML提供應用程式圖形介面。正規HTML檔案被限制在瀏覽器的安全模型中，只能分別透過網頁伺服器和網頁物件與站點<a href="/wiki/Cookie" title="Cookie">Cookie</a>進行通信和操作。HTA作為完全受信任的應用程式執行，因此擁有更多的權限，如建立/編輯/刪除檔案與<a href="/wiki/%E6%B3%A8%E5%86%8C%E8%A1%A8" title="登錄檔">登錄檔</a>項。因為它們在瀏覽器安全模式之外操作，所以HTA不能透過HTTP執行，必須下載（就像<a href="/wiki/EXE%E6%A0%BC%E5%BC%8F" title="EXE格式">EXE檔案</a>）並在本地檔案系統執行。
</p>, <p><a href="/wiki/%E6%89%80%E8%A6%8B%E5%8D%B3%E6%89%80%E5%BE%97" title="所見即所得">所見即所得</a>編輯器使用<a href="/wiki/%E5%9B%BE%E5%BD%A2%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2" title="圖形化使用者介面">圖形化使用者介面</a>（GUI）顯示HTML文件，常常類似於<a href="/wiki/%E6%96%87%E5%AD%97%E5%A4%84%E7%90%86%E5%99%A8" title="文書處理器">文書處理器</a>，所以用戶可以設計一切。編者面對的是文件，而不是代碼，所以作者並不需要太多的HTML知識。這種所見即所得的編輯模式一直受到詬病<sup class="reference" id="cite_ref-77"><a href="#cite_note-77">[77]</a></sup><sup class="reference" id="cite_ref-78"><a href="#cite_note-78">[78]</a></sup>，主要因為它生成的代碼品質不高；也有人主張將其改變至<a class="mw-redirect" href="/wiki/WYSIWYM" title="WYSIWYM">WYSIWYM</a>模型（所見即所指）。
</p>, <p class="mw-empty-elt">
</p>, <p class="mw-empty-elt">
</p>]